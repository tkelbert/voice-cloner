2025-03-21 19:41:58,963 - VoiceApp - INFO - PyAudio imported successfully
2025-03-21 19:41:59,041 - VoiceApp - INFO - Initializing Voice Cloning App
2025-03-21 19:41:59,041 - VoiceApp - INFO - Voice model initialized on cpu
2025-03-21 19:41:59,042 - VoiceApp - INFO - Audio player initialized
2025-03-21 19:41:59,064 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 5.15.6.
2025-03-21 19:41:59,078 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-21 19:41:59,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-21 19:41:59,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/font-awesome/fontawesome-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,082 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-BoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/RaviPrakash.ttf', name='RaviPrakash', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-MediumItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:41:59,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 19:41:59,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:41:59,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/suranna.ttf', name='Suranna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Bangers-Regular.ttf', name='Bangers', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/BubblerOne-Regular.ttf', name='Bubbler One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 19:41:59,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:41:59,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/libreoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-MediumItalic.ttf', name='Lato', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:41:59,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NATS.ttf', name='NATS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TimmanaRegular.ttf', name='Timmana', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Thin.ttf', name='Lato', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:41:59,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BoldItalic.ttf', name='Lato', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ponnala.ttf', name='Ponnala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Bold.ttf', name='Lato', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gurajada.ttf', name='Gurajada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Peddana-Regular.ttf', name='Peddana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/AmaticSC-Regular.ttf', name='Amatic SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HairlineItalic.ttf', name='Lato', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 19:41:59,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BlackItalic.ttf', name='Lato', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,119 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-LightItalic.ttf', name='Lato', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 19:41:59,120 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-ThinItalic.ttf', name='Lato', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/VT323-Regular.ttf', name='VT323', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Italic.ttf', name='Lato', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Heavy.ttf', name='Lato', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Medium.ttf', name='Lato', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SyamalaRamana.ttf', name='Syamala Ramana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:41:59,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/PottiSreeramulu.ttf', name='Potti Sreeramulu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gidugu.ttf', name='Gidugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Suravaram.ttf', name='Suravaram', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Mukti.ttf', name='Mukti', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Black.ttf', name='Lato', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Muktibold.ttf', name='Mukti', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ramaraja-Regular.ttf', name='Ramaraja', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/LakkiReddy.ttf', name='LakkiReddy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SreeKrushnadevaraya.ttf', name='Sree Krushnadevaraya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/ramabhadra.ttf', name='Ramabhadra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/dhurjati.ttf', name='Dhurjati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Regular.ttf', name='Lato', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MitraMono.ttf', name='Mitra ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/font-awesome/FontAwesome.otf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-SemiboldItalic.ttf', name='Lato', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:41:59,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TenaliRamakrishna-Regular.ttf', name='TenaliRamakrishna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Semibold.ttf', name='Lato', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NTR.ttf', name='NTR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HeavyItalic.ttf', name='Lato', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Italic.ttf', name='Yrsa', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/mallanna.ttf', name='Mallanna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:41:59,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-LightItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:41:59,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:41:59,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Mandali-Regular.ttf', name='Mandali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:41:59,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:41:59,134 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-21 19:41:59,142 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:41:59,159 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:41:59,173 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:41:59,187 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:41:59,203 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:41:59,217 - VoiceApp - INFO - UI initialization complete
2025-03-21 19:43:40,543 - VoiceApp - INFO - Selected source audio: /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 19:43:43,440 - VoiceApp - INFO - Starting analysis of /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 19:43:43,443 - VoiceApp - DEBUG - AnalysisThread initialized for /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 19:43:43,444 - VoiceApp - INFO - Starting analysis thread
2025-03-21 19:43:44,470 - VoiceApp - INFO - Extracting speaker embedding from /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 19:43:45,265 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	LOAD_FAST(arg=0, lineno=1140)
           4	LOAD_CONST(arg=1, lineno=1140)
           6	BINARY_SUBSCR(arg=None, lineno=1140)
           8	STORE_FAST(arg=3, lineno=1140)
          10	LOAD_FAST(arg=1, lineno=1141)
          12	UNARY_NEGATIVE(arg=None, lineno=1141)
          14	LOAD_FAST(arg=3, lineno=1141)
          16	DUP_TOP(arg=None, lineno=1141)
          18	ROT_THREE(arg=None, lineno=1141)
          20	COMPARE_OP(arg=1, lineno=1141)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1141)
          24	LOAD_FAST(arg=1, lineno=1141)
          26	COMPARE_OP(arg=1, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1141)
          30	JUMP_FORWARD(arg=2, lineno=1141)
>         32	POP_TOP(arg=None, lineno=1141)
          34	JUMP_FORWARD(arg=2, lineno=1141)
>         36	LOAD_CONST(arg=1, lineno=1142)
          38	STORE_FAST(arg=3, lineno=1142)
>         40	LOAD_FAST(arg=0, lineno=1144)
          42	LOAD_CONST(arg=2, lineno=1144)
          44	BINARY_SUBSCR(arg=None, lineno=1144)
          46	STORE_FAST(arg=4, lineno=1144)
          48	LOAD_FAST(arg=1, lineno=1145)
          50	UNARY_NEGATIVE(arg=None, lineno=1145)
          52	LOAD_FAST(arg=4, lineno=1145)
          54	DUP_TOP(arg=None, lineno=1145)
          56	ROT_THREE(arg=None, lineno=1145)
          58	COMPARE_OP(arg=1, lineno=1145)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1145)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	COMPARE_OP(arg=1, lineno=1145)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1145)
          68	JUMP_FORWARD(arg=2, lineno=1145)
>         70	POP_TOP(arg=None, lineno=1145)
          72	JUMP_FORWARD(arg=2, lineno=1145)
>         74	LOAD_CONST(arg=1, lineno=1146)
          76	STORE_FAST(arg=4, lineno=1146)
>         78	LOAD_FAST(arg=2, lineno=1148)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1148)
          82	LOAD_GLOBAL(arg=0, lineno=1149)
          84	LOAD_METHOD(arg=1, lineno=1149)
          86	LOAD_FAST(arg=3, lineno=1149)
          88	CALL_METHOD(arg=1, lineno=1149)
          90	LOAD_GLOBAL(arg=0, lineno=1149)
          92	LOAD_METHOD(arg=1, lineno=1149)
          94	LOAD_FAST(arg=4, lineno=1149)
          96	CALL_METHOD(arg=1, lineno=1149)
          98	COMPARE_OP(arg=3, lineno=1149)
         100	RETURN_VALUE(arg=None, lineno=1149)
>        102	LOAD_GLOBAL(arg=0, lineno=1151)
         104	LOAD_METHOD(arg=2, lineno=1151)
         106	LOAD_FAST(arg=3, lineno=1151)
         108	CALL_METHOD(arg=1, lineno=1151)
         110	LOAD_GLOBAL(arg=0, lineno=1151)
         112	LOAD_METHOD(arg=2, lineno=1151)
         114	LOAD_FAST(arg=4, lineno=1151)
         116	CALL_METHOD(arg=1, lineno=1151)
         118	COMPARE_OP(arg=3, lineno=1151)
         120	RETURN_VALUE(arg=None, lineno=1151)
2025-03-21 19:43:45,265 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 19:43:45,265 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,265 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1140)
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1140)
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1.1']
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1140)
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1141)
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1141)
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-03-21 19:43:45,266 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1141)
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1141)
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1141)
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1141)
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1141)
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1141)
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1141)
2025-03-21 19:43:45,267 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1141)
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1144)
2025-03-21 19:43:45,268 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1144)
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1.2']
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1144)
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1145)
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1145)
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1145)
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1145)
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1145)
2025-03-21 19:43:45,269 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1145)
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1142)
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1142)
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - stack ['$const36.0.1']
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-03-21 19:43:45,270 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1145)
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1145)
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1145)
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-03-21 19:43:45,271 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1148)
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1148)
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1146)
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1146)
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - stack ['$const74.0.1']
2025-03-21 19:43:45,272 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1149)
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1149)
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1149)
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1149)
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1149)
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1149)
2025-03-21 19:43:45,273 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1149)
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1151)
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1151)
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1151)
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-03-21 19:43:45,274 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1151)
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1151)
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1151)
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1151)
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 19:43:45,275 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-03-21 19:43:45,276 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-03-21 19:43:45,276 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-03-21 19:43:45,276 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-03-21 19:43:45,277 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-03-21 19:43:45,277 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-03-21 19:43:45,277 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 19:43:45,277 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1.1'}), (6, {'index': '$const4.1.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-03-21 19:43:45,277 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0.1'}), (38, {'value': '$const36.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1.2'}), (44, {'index': '$const42.1.2', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0.1'}), (76, {'value': '$const74.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:43:45,278 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:43:45,281 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	LOAD_FAST(arg=0, lineno=1026)
           4	LOAD_CONST(arg=1, lineno=1026)
           6	BINARY_SUBSCR(arg=None, lineno=1026)
           8	LOAD_FAST(arg=0, lineno=1026)
          10	LOAD_CONST(arg=2, lineno=1026)
          12	BINARY_SUBSCR(arg=None, lineno=1026)
          14	COMPARE_OP(arg=4, lineno=1026)
          16	LOAD_FAST(arg=0, lineno=1026)
          18	LOAD_CONST(arg=1, lineno=1026)
          20	BINARY_SUBSCR(arg=None, lineno=1026)
          22	LOAD_FAST(arg=0, lineno=1026)
          24	LOAD_CONST(arg=3, lineno=1026)
          26	BINARY_SUBSCR(arg=None, lineno=1026)
          28	COMPARE_OP(arg=5, lineno=1026)
          30	BINARY_AND(arg=None, lineno=1026)
          32	RETURN_VALUE(arg=None, lineno=1026)
2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1023)
2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1026)
2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1026)
2025-03-21 19:43:45,925 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1.1']
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1026)
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1026)
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4.2']
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1026)
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1026)
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1026)
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8.1']
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1026)
2025-03-21 19:43:45,928 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1026)
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11.3']
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1026)
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1026)
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1026)
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:43:45,929 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 19:43:45,930 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 19:43:45,930 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 19:43:45,930 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1.1'}), (6, {'index': '$const4.1.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4.2'}), (12, {'index': '$const10.4.2', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8.1'}), (20, {'index': '$const18.8.1', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11.3'}), (26, {'index': '$const24.11.3', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:43:45,930 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-03-21 19:43:45,931 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	LOAD_FAST(arg=0, lineno=1032)
           4	LOAD_CONST(arg=1, lineno=1032)
           6	BINARY_SUBSCR(arg=None, lineno=1032)
           8	LOAD_FAST(arg=0, lineno=1032)
          10	LOAD_CONST(arg=2, lineno=1032)
          12	BINARY_SUBSCR(arg=None, lineno=1032)
          14	COMPARE_OP(arg=0, lineno=1032)
          16	LOAD_FAST(arg=0, lineno=1032)
          18	LOAD_CONST(arg=1, lineno=1032)
          20	BINARY_SUBSCR(arg=None, lineno=1032)
          22	LOAD_FAST(arg=0, lineno=1032)
          24	LOAD_CONST(arg=3, lineno=1032)
          26	BINARY_SUBSCR(arg=None, lineno=1032)
          28	COMPARE_OP(arg=1, lineno=1032)
          30	BINARY_AND(arg=None, lineno=1032)
          32	RETURN_VALUE(arg=None, lineno=1032)
2025-03-21 19:43:45,931 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 19:43:45,931 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:45,931 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 19:43:45,931 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1029)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1032)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1032)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1.1']
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1032)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1032)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4.2']
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1032)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1032)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1032)
2025-03-21 19:43:45,932 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8.1']
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1032)
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1032)
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11.3']
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1032)
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1032)
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1032)
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 19:43:45,933 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:43:45,934 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:43:45,934 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 19:43:45,934 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 19:43:45,934 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 19:43:45,934 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1.1'}), (6, {'index': '$const4.1.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4.2'}), (12, {'index': '$const10.4.2', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8.1'}), (20, {'index': '$const18.8.1', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11.3'}), (26, {'index': '$const24.11.3', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:43:45,934 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-03-21 19:43:46,691 - VoiceApp - DEBUG - Loaded audio: length=8445697, sample_rate=22050
2025-03-21 19:43:46,697 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	LOAD_FAST(arg=0, lineno=419)
           4	LOAD_CONST(arg=1, lineno=419)
           6	BINARY_SUBSCR(arg=None, lineno=419)
           8	LOAD_FAST(arg=0, lineno=419)
          10	LOAD_CONST(arg=2, lineno=419)
          12	BINARY_SUBSCR(arg=None, lineno=419)
          14	BINARY_ADD(arg=None, lineno=419)
          16	LOAD_CONST(arg=3, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=4, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          24	BINARY_MULTIPLY(arg=None, lineno=419)
          26	BINARY_SUBTRACT(arg=None, lineno=419)
          28	STORE_FAST(arg=1, lineno=419)
          30	LOAD_FAST(arg=0, lineno=420)
          32	LOAD_CONST(arg=1, lineno=420)
          34	BINARY_SUBSCR(arg=None, lineno=420)
          36	LOAD_FAST(arg=0, lineno=420)
          38	LOAD_CONST(arg=2, lineno=420)
          40	BINARY_SUBSCR(arg=None, lineno=420)
          42	BINARY_SUBTRACT(arg=None, lineno=420)
          44	LOAD_CONST(arg=3, lineno=420)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=420)
          48	STORE_FAST(arg=2, lineno=420)
          50	LOAD_GLOBAL(arg=0, lineno=422)
          52	LOAD_METHOD(arg=1, lineno=422)
          54	LOAD_FAST(arg=2, lineno=422)
          56	CALL_METHOD(arg=1, lineno=422)
          58	LOAD_GLOBAL(arg=0, lineno=422)
          60	LOAD_METHOD(arg=1, lineno=422)
          62	LOAD_FAST(arg=1, lineno=422)
          64	CALL_METHOD(arg=1, lineno=422)
          66	COMPARE_OP(arg=5, lineno=422)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=422)
          70	LOAD_CONST(arg=4, lineno=425)
          72	RETURN_VALUE(arg=None, lineno=425)
>         74	LOAD_FAST(arg=2, lineno=427)
          76	UNARY_NEGATIVE(arg=None, lineno=427)
          78	LOAD_FAST(arg=1, lineno=427)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=427)
          82	RETURN_VALUE(arg=None, lineno=427)
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=419)
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=419)
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1.1']
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=419)
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=419)
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-03-21 19:43:46,698 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4.2']
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=419)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=419)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7.3']
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=419)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7.3', '$x18.8']
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7.3', '$x18.8', '$const20.9.4']
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=419)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7.3', '$22binary_subscr.10']
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=419)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=419)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=420)
2025-03-21 19:43:46,699 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=420)
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14.1']
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=420)
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=420)
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17.2']
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=420)
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=420)
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=420)
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20.3']
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=420)
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-03-21 19:43:46,700 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=422)
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=422)
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=422)
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=422)
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=422)
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=422)
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=422)
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=422)
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=422)
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-03-21 19:43:46,701 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=422)
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=425)
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=425)
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - stack ['$const70.0.4']
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=427)
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=427)
2025-03-21 19:43:46,702 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=427)
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=427)
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 19:43:46,703 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 19:43:46,704 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1.1'}), (6, {'index': '$const4.1.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4.2'}), (12, {'index': '$const10.4.2', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7.3'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9.4'}), (22, {'index': '$const20.9.4', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7.3', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14.1'}), (34, {'index': '$const32.14.1', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17.2'}), (40, {'index': '$const38.17.2', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20.3'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20.3', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-03-21 19:43:46,704 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0.4'}), (72, {'retval': '$const70.0.4', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:43:46,704 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:43:46,705 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7.3 = const(int, 2)             ['$const16.7.3']
    $const20.9.4 = const(int, 0)             ['$const20.9.4']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9.4, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9.4', 'x']
    $24binary_multiply.11 = $const16.7.3 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7.3']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14.1 = const(int, 1)            ['$const32.14.1']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14.1, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14.1', 'x']
    $const38.17.2 = const(int, -1)           ['$const38.17.2']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17.2, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17.2', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20.3 = const(int, 2)            ['$const44.20.3']
    b = $42binary_subtract.19 / $const44.20.3 ['$42binary_subtract.19', '$const44.20.3', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0.4 = const(int, 0)             ['$const70.0.4']
    $72return_value.1 = cast(value=$const70.0.4) ['$72return_value.1', '$const70.0.4']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-03-21 19:43:47,227 - VoiceApp - ERROR - Error extracting speaker embedding: mat1 and mat2 shapes cannot be multiplied (1x20 and 64x32)
Traceback (most recent call last):
  File "/home/darce/Projects/voice-cloner/voice-cloning-app.py", line 144, in extract_speaker_embedding
    embedding = torch.matmul(torch.mean(mfccs_tensor, dim=1), self.encoder_params)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (1x20 and 64x32)
2025-03-21 19:50:47,591 - VoiceApp - INFO - Application closing - cleaning up
2025-03-21 19:57:28,622 - VoiceApp - INFO - PyAudio imported successfully
2025-03-21 19:57:28,714 - VoiceApp - INFO - Initializing Voice Cloning App
2025-03-21 19:57:28,715 - VoiceApp - INFO - Voice model initialized on cpu
2025-03-21 19:57:28,715 - VoiceApp - INFO - Audio player initialized
2025-03-21 19:57:28,738 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 5.15.6.
2025-03-21 19:57:28,751 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-21 19:57:28,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,752 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 19:57:28,753 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,754 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/font-awesome/fontawesome-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,755 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-BoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,756 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/RaviPrakash.ttf', name='RaviPrakash', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-MediumItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/suranna.ttf', name='Suranna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,757 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 19:57:28,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 19:57:28,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Bangers-Regular.ttf', name='Bangers', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/BubblerOne-Regular.ttf', name='Bubbler One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 19:57:28,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:28,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/libreoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-MediumItalic.ttf', name='Lato', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:28,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NATS.ttf', name='NATS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TimmanaRegular.ttf', name='Timmana', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 19:57:28,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 19:57:28,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Thin.ttf', name='Lato', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BoldItalic.ttf', name='Lato', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ponnala.ttf', name='Ponnala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Bold.ttf', name='Lato', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gurajada.ttf', name='Gurajada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Peddana-Regular.ttf', name='Peddana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/AmaticSC-Regular.ttf', name='Amatic SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HairlineItalic.ttf', name='Lato', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 19:57:28,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BlackItalic.ttf', name='Lato', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-21 19:57:28,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:28,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-LightItalic.ttf', name='Lato', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-ThinItalic.ttf', name='Lato', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/VT323-Regular.ttf', name='VT323', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Italic.ttf', name='Lato', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Heavy.ttf', name='Lato', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Medium.ttf', name='Lato', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SyamalaRamana.ttf', name='Syamala Ramana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/PottiSreeramulu.ttf', name='Potti Sreeramulu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gidugu.ttf', name='Gidugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Suravaram.ttf', name='Suravaram', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Mukti.ttf', name='Mukti', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Black.ttf', name='Lato', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Muktibold.ttf', name='Mukti', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ramaraja-Regular.ttf', name='Ramaraja', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/LakkiReddy.ttf', name='LakkiReddy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SreeKrushnadevaraya.ttf', name='Sree Krushnadevaraya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/ramabhadra.ttf', name='Ramabhadra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/dhurjati.ttf', name='Dhurjati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Regular.ttf', name='Lato', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MitraMono.ttf', name='Mitra ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/font-awesome/FontAwesome.otf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-SemiboldItalic.ttf', name='Lato', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TenaliRamakrishna-Regular.ttf', name='TenaliRamakrishna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Semibold.ttf', name='Lato', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NTR.ttf', name='NTR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HeavyItalic.ttf', name='Lato', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Italic.ttf', name='Yrsa', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/mallanna.ttf', name='Mallanna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-LightItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:28,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:28,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Mandali-Regular.ttf', name='Mandali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:28,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:28,813 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-21 19:57:28,821 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:57:28,837 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:57:28,851 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:57:28,865 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:57:28,880 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 19:57:28,895 - VoiceApp - INFO - UI initialization complete
2025-03-21 19:57:43,239 - VoiceApp - INFO - Selected source audio: /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 19:57:45,668 - VoiceApp - INFO - Starting analysis of /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 19:57:45,671 - VoiceApp - DEBUG - AnalysisThread initialized for /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 19:57:45,672 - VoiceApp - INFO - Starting analysis thread
2025-03-21 19:57:46,700 - VoiceApp - INFO - Extracting speaker embedding from /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 19:57:47,493 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	LOAD_FAST(arg=0, lineno=1140)
           4	LOAD_CONST(arg=1, lineno=1140)
           6	BINARY_SUBSCR(arg=None, lineno=1140)
           8	STORE_FAST(arg=3, lineno=1140)
          10	LOAD_FAST(arg=1, lineno=1141)
          12	UNARY_NEGATIVE(arg=None, lineno=1141)
          14	LOAD_FAST(arg=3, lineno=1141)
          16	DUP_TOP(arg=None, lineno=1141)
          18	ROT_THREE(arg=None, lineno=1141)
          20	COMPARE_OP(arg=1, lineno=1141)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1141)
          24	LOAD_FAST(arg=1, lineno=1141)
          26	COMPARE_OP(arg=1, lineno=1141)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1141)
          30	JUMP_FORWARD(arg=2, lineno=1141)
>         32	POP_TOP(arg=None, lineno=1141)
          34	JUMP_FORWARD(arg=2, lineno=1141)
>         36	LOAD_CONST(arg=1, lineno=1142)
          38	STORE_FAST(arg=3, lineno=1142)
>         40	LOAD_FAST(arg=0, lineno=1144)
          42	LOAD_CONST(arg=2, lineno=1144)
          44	BINARY_SUBSCR(arg=None, lineno=1144)
          46	STORE_FAST(arg=4, lineno=1144)
          48	LOAD_FAST(arg=1, lineno=1145)
          50	UNARY_NEGATIVE(arg=None, lineno=1145)
          52	LOAD_FAST(arg=4, lineno=1145)
          54	DUP_TOP(arg=None, lineno=1145)
          56	ROT_THREE(arg=None, lineno=1145)
          58	COMPARE_OP(arg=1, lineno=1145)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1145)
          62	LOAD_FAST(arg=1, lineno=1145)
          64	COMPARE_OP(arg=1, lineno=1145)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1145)
          68	JUMP_FORWARD(arg=2, lineno=1145)
>         70	POP_TOP(arg=None, lineno=1145)
          72	JUMP_FORWARD(arg=2, lineno=1145)
>         74	LOAD_CONST(arg=1, lineno=1146)
          76	STORE_FAST(arg=4, lineno=1146)
>         78	LOAD_FAST(arg=2, lineno=1148)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1148)
          82	LOAD_GLOBAL(arg=0, lineno=1149)
          84	LOAD_METHOD(arg=1, lineno=1149)
          86	LOAD_FAST(arg=3, lineno=1149)
          88	CALL_METHOD(arg=1, lineno=1149)
          90	LOAD_GLOBAL(arg=0, lineno=1149)
          92	LOAD_METHOD(arg=1, lineno=1149)
          94	LOAD_FAST(arg=4, lineno=1149)
          96	CALL_METHOD(arg=1, lineno=1149)
          98	COMPARE_OP(arg=3, lineno=1149)
         100	RETURN_VALUE(arg=None, lineno=1149)
>        102	LOAD_GLOBAL(arg=0, lineno=1151)
         104	LOAD_METHOD(arg=2, lineno=1151)
         106	LOAD_FAST(arg=3, lineno=1151)
         108	CALL_METHOD(arg=1, lineno=1151)
         110	LOAD_GLOBAL(arg=0, lineno=1151)
         112	LOAD_METHOD(arg=2, lineno=1151)
         114	LOAD_FAST(arg=4, lineno=1151)
         116	CALL_METHOD(arg=1, lineno=1151)
         118	COMPARE_OP(arg=3, lineno=1151)
         120	RETURN_VALUE(arg=None, lineno=1151)
2025-03-21 19:57:47,494 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 19:57:47,494 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:47,494 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 19:57:47,494 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1137)
2025-03-21 19:57:47,494 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,494 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1140)
2025-03-21 19:57:47,494 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1140)
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1140)
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1.1']
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1140)
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1141)
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1141)
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1141)
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1141)
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1141)
2025-03-21 19:57:47,495 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1141)
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1141)
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1141)
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1141)
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1141)
2025-03-21 19:57:47,496 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1141)
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1144)
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1144)
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1144)
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1.2']
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1144)
2025-03-21 19:57:47,497 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1145)
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1145)
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1145)
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1145)
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1145)
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1145)
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:47,498 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1142)
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1142)
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - stack ['$const36.0.1']
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1145)
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1145)
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1145)
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-03-21 19:57:47,499 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1145)
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1145)
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1148)
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1148)
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-03-21 19:57:47,500 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1146)
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1146)
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - stack ['$const74.0.1']
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1149)
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1149)
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-03-21 19:57:47,501 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1149)
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1149)
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1149)
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1149)
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1149)
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1149)
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1149)
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:47,502 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1151)
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1151)
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1151)
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1151)
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1151)
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1151)
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1151)
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1151)
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1151)
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:57:47,503 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-03-21 19:57:47,504 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 19:57:47,504 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-03-21 19:57:47,504 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-03-21 19:57:47,504 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-03-21 19:57:47,505 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-03-21 19:57:47,505 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-03-21 19:57:47,505 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-03-21 19:57:47,505 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 19:57:47,505 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1.1'}), (6, {'index': '$const4.1.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0.1'}), (38, {'value': '$const36.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1.2'}), (44, {'index': '$const42.1.2', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0.1'}), (76, {'value': '$const74.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:57:47,506 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:57:47,509 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    x0 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$const4.1.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1.2 = const(int, -1)            ['$const42.1.2']
    x1 = getitem(value=x, index=$const42.1.2, fn=<built-in function getitem>) ['$const42.1.2', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-03-21 19:57:48,112 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	LOAD_FAST(arg=0, lineno=1026)
           4	LOAD_CONST(arg=1, lineno=1026)
           6	BINARY_SUBSCR(arg=None, lineno=1026)
           8	LOAD_FAST(arg=0, lineno=1026)
          10	LOAD_CONST(arg=2, lineno=1026)
          12	BINARY_SUBSCR(arg=None, lineno=1026)
          14	COMPARE_OP(arg=4, lineno=1026)
          16	LOAD_FAST(arg=0, lineno=1026)
          18	LOAD_CONST(arg=1, lineno=1026)
          20	BINARY_SUBSCR(arg=None, lineno=1026)
          22	LOAD_FAST(arg=0, lineno=1026)
          24	LOAD_CONST(arg=3, lineno=1026)
          26	BINARY_SUBSCR(arg=None, lineno=1026)
          28	COMPARE_OP(arg=5, lineno=1026)
          30	BINARY_AND(arg=None, lineno=1026)
          32	RETURN_VALUE(arg=None, lineno=1026)
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1023)
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1026)
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1026)
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1.1']
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1026)
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1026)
2025-03-21 19:57:48,113 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4.2']
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1026)
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1026)
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1026)
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8.1']
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1026)
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1026)
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1026)
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11.3']
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1026)
2025-03-21 19:57:48,114 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1026)
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1026)
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 19:57:48,115 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1.1'}), (6, {'index': '$const4.1.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4.2'}), (12, {'index': '$const10.4.2', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8.1'}), (20, {'index': '$const18.8.1', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11.3'}), (26, {'index': '$const24.11.3', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:57:48,116 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-03-21 19:57:48,117 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	LOAD_FAST(arg=0, lineno=1032)
           4	LOAD_CONST(arg=1, lineno=1032)
           6	BINARY_SUBSCR(arg=None, lineno=1032)
           8	LOAD_FAST(arg=0, lineno=1032)
          10	LOAD_CONST(arg=2, lineno=1032)
          12	BINARY_SUBSCR(arg=None, lineno=1032)
          14	COMPARE_OP(arg=0, lineno=1032)
          16	LOAD_FAST(arg=0, lineno=1032)
          18	LOAD_CONST(arg=1, lineno=1032)
          20	BINARY_SUBSCR(arg=None, lineno=1032)
          22	LOAD_FAST(arg=0, lineno=1032)
          24	LOAD_CONST(arg=3, lineno=1032)
          26	BINARY_SUBSCR(arg=None, lineno=1032)
          28	COMPARE_OP(arg=1, lineno=1032)
          30	BINARY_AND(arg=None, lineno=1032)
          32	RETURN_VALUE(arg=None, lineno=1032)
2025-03-21 19:57:48,117 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 19:57:48,117 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:48,117 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 19:57:48,117 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1029)
2025-03-21 19:57:48,117 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,117 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1032)
2025-03-21 19:57:48,117 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,117 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1.1']
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4.2']
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8.1']
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1032)
2025-03-21 19:57:48,118 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1032)
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1032)
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11.3']
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1032)
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1032)
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1032)
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:57:48,119 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 19:57:48,120 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 19:57:48,120 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 19:57:48,120 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1.1'}), (6, {'index': '$const4.1.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4.2'}), (12, {'index': '$const10.4.2', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8.1'}), (20, {'index': '$const18.8.1', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11.3'}), (26, {'index': '$const24.11.3', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:57:48,120 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 0)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8.1 = const(int, 0)             ['$const18.8.1']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8.1, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8.1', 'x']
    $const24.11.3 = const(int, 1)            ['$const24.11.3']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11.3, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11.3', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-03-21 19:57:48,940 - VoiceApp - DEBUG - Loaded audio with librosa: length=8445697, sample_rate=22050
2025-03-21 19:57:48,945 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=416)
           2	LOAD_FAST(arg=0, lineno=419)
           4	LOAD_CONST(arg=1, lineno=419)
           6	BINARY_SUBSCR(arg=None, lineno=419)
           8	LOAD_FAST(arg=0, lineno=419)
          10	LOAD_CONST(arg=2, lineno=419)
          12	BINARY_SUBSCR(arg=None, lineno=419)
          14	BINARY_ADD(arg=None, lineno=419)
          16	LOAD_CONST(arg=3, lineno=419)
          18	LOAD_FAST(arg=0, lineno=419)
          20	LOAD_CONST(arg=4, lineno=419)
          22	BINARY_SUBSCR(arg=None, lineno=419)
          24	BINARY_MULTIPLY(arg=None, lineno=419)
          26	BINARY_SUBTRACT(arg=None, lineno=419)
          28	STORE_FAST(arg=1, lineno=419)
          30	LOAD_FAST(arg=0, lineno=420)
          32	LOAD_CONST(arg=1, lineno=420)
          34	BINARY_SUBSCR(arg=None, lineno=420)
          36	LOAD_FAST(arg=0, lineno=420)
          38	LOAD_CONST(arg=2, lineno=420)
          40	BINARY_SUBSCR(arg=None, lineno=420)
          42	BINARY_SUBTRACT(arg=None, lineno=420)
          44	LOAD_CONST(arg=3, lineno=420)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=420)
          48	STORE_FAST(arg=2, lineno=420)
          50	LOAD_GLOBAL(arg=0, lineno=422)
          52	LOAD_METHOD(arg=1, lineno=422)
          54	LOAD_FAST(arg=2, lineno=422)
          56	CALL_METHOD(arg=1, lineno=422)
          58	LOAD_GLOBAL(arg=0, lineno=422)
          60	LOAD_METHOD(arg=1, lineno=422)
          62	LOAD_FAST(arg=1, lineno=422)
          64	CALL_METHOD(arg=1, lineno=422)
          66	COMPARE_OP(arg=5, lineno=422)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=422)
          70	LOAD_CONST(arg=4, lineno=425)
          72	RETURN_VALUE(arg=None, lineno=425)
>         74	LOAD_FAST(arg=2, lineno=427)
          76	UNARY_NEGATIVE(arg=None, lineno=427)
          78	LOAD_FAST(arg=1, lineno=427)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=427)
          82	RETURN_VALUE(arg=None, lineno=427)
2025-03-21 19:57:48,945 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 19:57:48,945 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:48,945 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 19:57:48,945 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=416)
2025-03-21 19:57:48,945 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,945 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1.1']
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4.2']
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7.3']
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=419)
2025-03-21 19:57:48,946 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7.3', '$x18.8']
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=419)
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7.3', '$x18.8', '$const20.9.4']
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=419)
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7.3', '$22binary_subscr.10']
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=419)
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=419)
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=420)
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=420)
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14.1']
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=420)
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=420)
2025-03-21 19:57:48,947 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=420)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17.2']
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=420)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=420)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=420)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20.3']
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=420)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=422)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=422)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=422)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=422)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=422)
2025-03-21 19:57:48,948 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=422)
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=422)
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=422)
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=422)
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=422)
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=425)
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,949 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=425)
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - stack ['$const70.0.4']
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=427)
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - stack []
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=427)
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=427)
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=427)
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=427)
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 19:57:48,950 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-03-21 19:57:48,951 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 19:57:48,951 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:57:48,951 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 19:57:48,951 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 19:57:48,951 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 19:57:48,951 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 19:57:48,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1.1'}), (6, {'index': '$const4.1.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4.2'}), (12, {'index': '$const10.4.2', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7.3'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9.4'}), (22, {'index': '$const20.9.4', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7.3', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14.1'}), (34, {'index': '$const32.14.1', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17.2'}), (40, {'index': '$const38.17.2', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20.3'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20.3', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-03-21 19:57:48,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0.4'}), (72, {'retval': '$const70.0.4', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:57:48,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 19:57:48,953 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1.1 = const(int, 1)              ['$const4.1.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1.1', 'x']
    $const10.4.2 = const(int, -1)            ['$const10.4.2']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4.2, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4.2', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7.3 = const(int, 2)             ['$const16.7.3']
    $const20.9.4 = const(int, 0)             ['$const20.9.4']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9.4, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9.4', 'x']
    $24binary_multiply.11 = $const16.7.3 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7.3']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14.1 = const(int, 1)            ['$const32.14.1']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14.1, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14.1', 'x']
    $const38.17.2 = const(int, -1)           ['$const38.17.2']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17.2, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17.2', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20.3 = const(int, 2)            ['$const44.20.3']
    b = $42binary_subtract.19 / $const44.20.3 ['$42binary_subtract.19', '$const44.20.3', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:419)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:422),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0.4 = const(int, 0)             ['$const70.0.4']
    $72return_value.1 = cast(value=$const70.0.4) ['$72return_value.1', '$const70.0.4']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-03-21 19:57:49,420 - VoiceApp - DEBUG - Created embedding with shape torch.Size([1, 32])
2025-03-21 19:57:49,420 - VoiceApp - DEBUG - Analysis thread finished
2025-03-21 19:57:49,423 - VoiceApp - INFO - Analysis completed successfully
2025-03-21 19:57:49,423 - VoiceApp - DEBUG - Embedding shape: torch.Size([1, 32])
2025-03-21 19:57:49,423 - VoiceApp - DEBUG - Embedding device: cpu
2025-03-21 19:57:49,423 - VoiceApp - DEBUG - Generate button enabled
2025-03-21 19:57:49,423 - VoiceApp - DEBUG - Plotting waveform: length=8445697, sr=22050
2025-03-21 19:57:49,953 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-03-21 19:57:49,953 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,953 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,953 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,953 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,954 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-21 19:57:49,955 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/font-awesome/fontawesome-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,956 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,957 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-BoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/RaviPrakash.ttf', name='RaviPrakash', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-MediumItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,958 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/suranna.ttf', name='Suranna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Bangers-Regular.ttf', name='Bangers', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,959 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/BubblerOne-Regular.ttf', name='Bubbler One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/libreoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,960 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-MediumItalic.ttf', name='Lato', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NATS.ttf', name='NATS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TimmanaRegular.ttf', name='Timmana', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,961 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Thin.ttf', name='Lato', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BoldItalic.ttf', name='Lato', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ponnala.ttf', name='Ponnala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,962 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Bold.ttf', name='Lato', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gurajada.ttf', name='Gurajada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,963 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Peddana-Regular.ttf', name='Peddana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,964 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,965 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/AmaticSC-Regular.ttf', name='Amatic SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HairlineItalic.ttf', name='Lato', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 19:57:49,966 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,967 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BlackItalic.ttf', name='Lato', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,968 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-LightItalic.ttf', name='Lato', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-ThinItalic.ttf', name='Lato', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,969 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/VT323-Regular.ttf', name='VT323', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Italic.ttf', name='Lato', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Heavy.ttf', name='Lato', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-21 19:57:49,970 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Medium.ttf', name='Lato', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SyamalaRamana.ttf', name='Syamala Ramana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,971 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/PottiSreeramulu.ttf', name='Potti Sreeramulu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gidugu.ttf', name='Gidugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Suravaram.ttf', name='Suravaram', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Mukti.ttf', name='Mukti', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,972 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Black.ttf', name='Lato', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Muktibold.ttf', name='Mukti', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,973 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,974 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ramaraja-Regular.ttf', name='Ramaraja', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/LakkiReddy.ttf', name='LakkiReddy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,975 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SreeKrushnadevaraya.ttf', name='Sree Krushnadevaraya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/ramabhadra.ttf', name='Ramabhadra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/dhurjati.ttf', name='Dhurjati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Regular.ttf', name='Lato', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MitraMono.ttf', name='Mitra ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,976 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/font-awesome/FontAwesome.otf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-SemiboldItalic.ttf', name='Lato', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,977 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,978 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TenaliRamakrishna-Regular.ttf', name='TenaliRamakrishna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,979 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Semibold.ttf', name='Lato', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,980 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NTR.ttf', name='NTR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HeavyItalic.ttf', name='Lato', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 19:57:49,981 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Italic.ttf', name='Yrsa', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/mallanna.ttf', name='Mallanna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-LightItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Mandali-Regular.ttf', name='Mandali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,982 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 19:57:49,983 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 19:57:49,983 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-21 19:57:50,507 - VoiceApp - DEBUG - Plotting spectrogram: length=8445697, sr=22050
2025-03-21 19:57:52,218 - VoiceApp - DEBUG - Plotting MFCC: shape=(20, 16496)
2025-03-21 19:57:52,369 - VoiceApp - INFO - UI updated after analysis
2025-03-21 19:57:56,068 - VoiceApp - DEBUG - Using preset text: This is a test of the voice synthesis system.
2025-03-21 19:57:56,717 - VoiceApp - INFO - Starting speech generation with text: This is a test of the voice sy...
2025-03-21 19:57:56,717 - VoiceApp - DEBUG - Parameters: pitch=0, speed=1.0, emotion=neutral
2025-03-21 19:57:56,718 - VoiceApp - DEBUG - Batch mode: Single Text, number of texts: 1
2025-03-21 19:57:56,720 - VoiceApp - DEBUG - Processing batch item 1/1: This is a test of the voice sy...
2025-03-21 19:57:56,720 - VoiceApp - DEBUG - SynthesisThread initialized for text: This is a test of the voice sy...
2025-03-21 19:57:56,721 - VoiceApp - INFO - Starting synthesis thread
2025-03-21 19:57:58,762 - VoiceApp - INFO - Synthesizing speech: text='This is a test of the voice sy...', pitch=0, speed=1.0, emotion=neutral
2025-03-21 19:57:58,795 - VoiceApp - DEBUG - Generated audio: length=99225, min=-0.92, max=0.92
2025-03-21 19:57:58,795 - VoiceApp - DEBUG - Synthesis thread finished
2025-03-21 19:57:58,795 - VoiceApp - INFO - Synthesis complete: audio length=99225, sample rate=22050
2025-03-21 19:57:58,796 - VoiceApp - DEBUG - Audio min/max values: -0.9176/0.9176
2025-03-21 19:57:58,796 - VoiceApp - DEBUG - Created history item: 19:57:58 - This is a test of the voice sy...
2025-03-21 19:57:58,796 - VoiceApp - DEBUG - Plotting waveform: length=99225, sr=22050
2025-03-21 19:57:58,901 - VoiceApp - DEBUG - Plotting spectrogram: length=99225, sr=22050
2025-03-21 19:57:59,002 - VoiceApp - DEBUG - Play button enabled
2025-03-21 19:57:59,003 - VoiceApp - INFO - Speech generation complete for all items
2025-03-21 19:58:00,901 - VoiceApp - DEBUG - Saving temporary audio file to /tmp/tmpdatgjqv3.wav
2025-03-21 19:58:00,908 - VoiceApp - DEBUG - Audio saved to temporary file: /tmp/tmpdatgjqv3.wav
2025-03-21 19:58:00,908 - VoiceApp - DEBUG - Attempting to play audio file: /tmp/tmpdatgjqv3.wav
2025-03-21 19:58:00,911 - VoiceApp - DEBUG - Found player: aplay
2025-03-21 19:58:00,912 - VoiceApp - INFO - Started audio playback with aplay
2025-03-21 19:58:00,912 - VoiceApp - INFO - Audio playback started
2025-03-21 19:58:09,213 - VoiceApp - INFO - Starting speech generation with text: This is a test of the voice sy...
2025-03-21 19:58:09,213 - VoiceApp - DEBUG - Parameters: pitch=0, speed=1.0, emotion=neutral
2025-03-21 19:58:09,214 - VoiceApp - DEBUG - Batch mode: Single Text, number of texts: 1
2025-03-21 19:58:09,215 - VoiceApp - DEBUG - Processing batch item 1/1: This is a test of the voice sy...
2025-03-21 19:58:09,216 - VoiceApp - DEBUG - SynthesisThread initialized for text: This is a test of the voice sy...
2025-03-21 19:58:09,216 - VoiceApp - INFO - Starting synthesis thread
2025-03-21 19:58:11,259 - VoiceApp - INFO - Synthesizing speech: text='This is a test of the voice sy...', pitch=0, speed=1.0, emotion=neutral
2025-03-21 19:58:11,291 - VoiceApp - DEBUG - Generated audio: length=99225, min=-0.92, max=0.92
2025-03-21 19:58:11,291 - VoiceApp - DEBUG - Synthesis thread finished
2025-03-21 19:58:11,291 - VoiceApp - INFO - Synthesis complete: audio length=99225, sample rate=22050
2025-03-21 19:58:11,292 - VoiceApp - DEBUG - Audio min/max values: -0.9176/0.9176
2025-03-21 19:58:11,292 - VoiceApp - DEBUG - Created history item: 19:58:11 - This is a test of the voice sy...
2025-03-21 19:58:11,292 - VoiceApp - DEBUG - Plotting waveform: length=99225, sr=22050
2025-03-21 19:58:11,400 - VoiceApp - DEBUG - Plotting spectrogram: length=99225, sr=22050
2025-03-21 19:58:11,499 - VoiceApp - DEBUG - Play button enabled
2025-03-21 19:58:11,499 - VoiceApp - INFO - Speech generation complete for all items
2025-03-21 19:58:12,245 - VoiceApp - DEBUG - Saving temporary audio file to /tmp/tmp09_qekz_.wav
2025-03-21 19:58:12,252 - VoiceApp - DEBUG - Audio saved to temporary file: /tmp/tmp09_qekz_.wav
2025-03-21 19:58:12,252 - VoiceApp - DEBUG - Attempting to play audio file: /tmp/tmp09_qekz_.wav
2025-03-21 19:58:12,252 - VoiceApp - DEBUG - Deleted temporary file: /tmp/tmpdatgjqv3.wav
2025-03-21 19:58:12,255 - VoiceApp - DEBUG - Found player: aplay
2025-03-21 19:58:12,256 - VoiceApp - INFO - Started audio playback with aplay
2025-03-21 19:58:12,256 - VoiceApp - INFO - Audio playback started
2025-03-21 20:04:27,608 - VoiceApp - INFO - Application closing - cleaning up
2025-03-21 20:04:27,608 - VoiceApp - DEBUG - Deleted temporary file: /tmp/tmp09_qekz_.wav
2025-03-21 20:13:55,636 - VoiceApp - INFO - PyAudio imported successfully
2025-03-21 20:13:55,732 - VoiceApp - INFO - Initializing Voice Cloning App
2025-03-21 20:13:55,732 - VoiceApp - INFO - Voice model initialized on cpu
2025-03-21 20:13:55,733 - VoiceApp - INFO - Placeholder voice model initialized on cpu
2025-03-21 20:13:55,733 - VoiceApp - INFO - Audio player initialized
2025-03-21 20:13:55,758 - matplotlib.pyplot - DEBUG - Loaded backend qtagg version 5.15.6.
2025-03-21 20:13:55,773 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-21 20:13:55,773 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/LakkiReddy.ttf', name='LakkiReddy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NATS.ttf', name='NATS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/suranna.ttf', name='Suranna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BlackItalic.ttf', name='Lato', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-MediumItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:13:55,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HairlineItalic.ttf', name='Lato', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:13:55,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ponnala.ttf', name='Ponnala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 20:13:55,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TenaliRamakrishna-Regular.ttf', name='TenaliRamakrishna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 20:13:55,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:13:55,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 20:13:55,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Heavy.ttf', name='Lato', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SreeKrushnadevaraya.ttf', name='Sree Krushnadevaraya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BoldItalic.ttf', name='Lato', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HeavyItalic.ttf', name='Lato', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,802 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Suravaram.ttf', name='Suravaram', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gidugu.ttf', name='Gidugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TimmanaRegular.ttf', name='Timmana', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:13:55,803 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Mandali-Regular.ttf', name='Mandali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MitraMono.ttf', name='Mitra ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,804 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,805 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Regular.ttf', name='Lato', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,806 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/font-awesome/FontAwesome.otf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,807 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ramaraja-Regular.ttf', name='Ramaraja', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,808 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/mallanna.ttf', name='Mallanna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Thin.ttf', name='Lato', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,809 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-SemiboldItalic.ttf', name='Lato', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SyamalaRamana.ttf', name='Syamala Ramana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Italic.ttf', name='Lato', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Semibold.ttf', name='Lato', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:13:55,810 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,811 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/VT323-Regular.ttf', name='VT323', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Bold.ttf', name='Lato', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-MediumItalic.ttf', name='Lato', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,812 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-ThinItalic.ttf', name='Lato', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Black.ttf', name='Lato', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Muktibold.ttf', name='Mukti', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Medium.ttf', name='Lato', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/BubblerOne-Regular.ttf', name='Bubbler One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NTR.ttf', name='NTR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,813 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Italic.ttf', name='Yrsa', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/PottiSreeramulu.ttf', name='Potti Sreeramulu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,814 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Bangers-Regular.ttf', name='Bangers', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,815 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gurajada.ttf', name='Gurajada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/dhurjati.ttf', name='Dhurjati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-LightItalic.ttf', name='Lato', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/libreoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,816 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/font-awesome/fontawesome-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,817 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:13:55,818 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/AmaticSC-Regular.ttf', name='Amatic SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,819 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/RaviPrakash.ttf', name='RaviPrakash', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/ramabhadra.ttf', name='Ramabhadra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-BoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Peddana-Regular.ttf', name='Peddana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,820 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:13:55,821 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Mukti.ttf', name='Mukti', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-LightItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:13:55,822 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-21 20:13:55,834 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 20:13:55,920 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 20:13:55,937 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 20:13:55,954 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 20:13:55,974 - VoiceApp - DEBUG - WaveformWidget initialized
2025-03-21 20:13:55,990 - VoiceApp - INFO - UI initialization complete
2025-03-21 20:14:09,854 - VoiceApp - INFO - Selected source audio: /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 20:14:11,230 - VoiceApp - INFO - Starting analysis of /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 20:14:11,233 - VoiceApp - DEBUG - AnalysisThread initialized for /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 20:14:11,234 - VoiceApp - INFO - Starting analysis thread
2025-03-21 20:14:12,262 - VoiceApp - INFO - Extracting speaker embedding from /home/darce/whisper_audio/AI RECONSTRUCTS HITLER'S SPEECH TO ENGLISH (Extended).mp3
2025-03-21 20:14:12,939 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-03-21 20:14:12,939 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:12,939 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:12,939 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-03-21 20:14:12,940 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-03-21 20:14:12,941 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,942 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-03-21 20:14:12,943 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-03-21 20:14:12,944 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-03-21 20:14:12,945 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-03-21 20:14:12,946 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-03-21 20:14:12,947 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-03-21 20:14:12,948 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-03-21 20:14:12,949 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-03-21 20:14:12,949 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:12,949 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-03-21 20:14:12,949 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:12,949 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-03-21 20:14:12,949 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-03-21 20:14:12,949 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-03-21 20:14:12,950 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-03-21 20:14:12,950 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-03-21 20:14:12,950 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-03-21 20:14:12,951 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:12,952 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:12,954 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-03-21 20:14:13,173 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1161)
           2	LOAD_GLOBAL(arg=0, lineno=1177)
           4	LOAD_FAST(arg=0, lineno=1177)
           6	LOAD_FAST(arg=1, lineno=1177)
           8	LOAD_FAST(arg=2, lineno=1177)
          10	CALL_FUNCTION(arg=3, lineno=1177)
          12	LOAD_FAST(arg=3, lineno=1177)
          14	LOAD_CONST(arg=1, lineno=1177)
          16	LOAD_CONST(arg=1, lineno=1177)
          18	BUILD_SLICE(arg=2, lineno=1177)
          20	STORE_SUBSCR(arg=None, lineno=1177)
          22	LOAD_CONST(arg=1, lineno=1177)
          24	RETURN_VALUE(arg=None, lineno=1177)
2025-03-21 20:14:13,173 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:13,173 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,173 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:13,173 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1161)
2025-03-21 20:14:13,173 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1177)
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1177)
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=1177)
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=1177)
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$threshold6.2']
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=1177)
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$threshold6.2', '$zero_pos8.3']
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=1177)
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - stack ['$10call_function.4']
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=1177)
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - stack ['$10call_function.4', '$y12.5']
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=1177)
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - stack ['$10call_function.4', '$y12.5', '$const14.6']
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=BUILD_SLICE(arg=2, lineno=1177)
2025-03-21 20:14:13,174 - numba.core.byteflow - DEBUG - stack ['$10call_function.4', '$y12.5', '$const14.6', '$const16.7']
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=STORE_SUBSCR(arg=None, lineno=1177)
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - stack ['$10call_function.4', '$y12.5', '$18build_slice.9']
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_CONST(arg=1, lineno=1177)
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=1177)
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - stack ['$const22.10']
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:13,175 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'res': '$threshold6.2'}), (8, {'res': '$zero_pos8.3'}), (10, {'func': '$2load_global.0', 'args': ['$x4.1', '$threshold6.2', '$zero_pos8.3'], 'res': '$10call_function.4'}), (12, {'res': '$y12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$const16.7'}), (18, {'start': '$const14.6', 'stop': '$const16.7', 'step': None, 'res': '$18build_slice.9', 'slicevar': '$18build_slice.8'}), (20, {'target': '$y12.5', 'index': '$18build_slice.9', 'value': '$10call_function.4'}), (22, {'res': '$const22.10'}), (24, {'retval': '$const22.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:13,176 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x727f5ef32710>) ['$2load_global.0']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1161), Var(threshold, audio.py:1161), Var(zero_pos, audio.py:1161)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $const16.7 = const(NoneType, None)       ['$const16.7']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.9 = call $18build_slice.8($const14.6, $const16.7, func=$18build_slice.8, args=(Var($const14.6, audio.py:1177), Var($const16.7, audio.py:1177)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6', '$const16.7']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    $const22.10 = const(NoneType, None)      ['$const22.10']
    $24return_value.11 = cast(value=$const22.10) ['$24return_value.11', '$const22.10']
    return $24return_value.11                ['$24return_value.11']

2025-03-21 20:14:13,182 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:13,182 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e58fc70>
2025-03-21 20:14:13,182 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,182 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,182 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,182 - numba.core.ssa - DEBUG - on stmt: y = arg(3, name=y)
2025-03-21 20:14:13,182 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x727f5ef32710>)
2025-03-21 20:14:13,183 - numba.core.ssa - DEBUG - on stmt: $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1161), Var(threshold, audio.py:1161), Var(zero_pos, audio.py:1161)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,183 - numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
2025-03-21 20:14:13,183 - numba.core.ssa - DEBUG - on stmt: $const16.7 = const(NoneType, None)
2025-03-21 20:14:13,183 - numba.core.ssa - DEBUG - on stmt: $18build_slice.8 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,183 - numba.core.ssa - DEBUG - on stmt: $18build_slice.9 = call $18build_slice.8($const14.6, $const16.7, func=$18build_slice.8, args=(Var($const14.6, audio.py:1177), Var($const16.7, audio.py:1177)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,183 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $10call_function.4
2025-03-21 20:14:13,183 - numba.core.ssa - DEBUG - on stmt: $const22.10 = const(NoneType, None)
2025-03-21 20:14:13,183 - numba.core.ssa - DEBUG - on stmt: $24return_value.11 = cast(value=$const22.10)
2025-03-21 20:14:13,183 - numba.core.ssa - DEBUG - on stmt: return $24return_value.11
2025-03-21 20:14:13,184 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x727f5e58e320>,
                                     0)],
             '$18build_slice.8': [(<numba.core.ir.Assign object at 0x727f5e58e860>,
                                   0)],
             '$18build_slice.9': [(<numba.core.ir.Assign object at 0x727f5e58e980>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x727f5e58ed40>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5e58dde0>,
                                  0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x727f5e58e560>,
                             0)],
             '$const16.7': [(<numba.core.ir.Assign object at 0x727f5e58e6e0>,
                             0)],
             '$const22.10': [(<numba.core.ir.Assign object at 0x727f5e58ebc0>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x727f5e58da20>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5e58d900>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5e58dc60>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x727f5e58db40>,
                           0)]})
2025-03-21 20:14:13,184 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e58fc70>
2025-03-21 20:14:13,231 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=3, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=3, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=4, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=4, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=4, lineno=5)
          40	LOAD_CONST(arg=2, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=3, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=2, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=5, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=6, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=4, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:13,231 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:13,231 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,231 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=3, lineno=2)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=3)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:13,232 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=4, lineno=3)
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=4, lineno=4)
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:13,233 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=5)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:13,234 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=6)
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:13,235 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:13,236 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=8)
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=5, lineno=6)
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=6, lineno=7)
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:13,237 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:13,238 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:13,238 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:13,238 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:13,238 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:13,238 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:13,238 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:13,238 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:13,239 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:13,239 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:13,239 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:13,240 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:13,240 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:13,240 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:13,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:13,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:13,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:13,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:13,242 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, 0)              ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 0)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:13,261 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:13,261 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,261 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,261 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,261 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,262 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,263 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,264 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 194
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,265 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 115
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 123
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 121
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - on stmt: x0 = const(int, 0)
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 127
2025-03-21 20:14:13,266 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const42.1 + index00
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 131
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,267 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 153
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 161
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 159
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 165
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 169
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,268 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 173
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,269 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,270 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,270 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,270 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,270 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,270 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,270 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 193
2025-03-21 20:14:13,270 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3855a0>
2025-03-21 20:14:13,270 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,272 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$100return_value.9': [(<numba.core.ir.Assign object at 0x727f5e31e8f0>,
                                     169)],
             '$102load_global.0': [(<numba.core.ir.Assign object at 0x727f5e32ace0>,
                                    173)],
             '$104load_method.1': [(<numba.core.ir.Assign object at 0x727f5e32aec0>,
                                    173)],
             '$108call_method.3': [(<numba.core.ir.Assign object at 0x727f5e334bb0>,
                                    173)],
             '$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f5e34af80>,
                                   0)],
             '$110load_global.4': [(<numba.core.ir.Assign object at 0x727f5e334d90>,
                                    173)],
             '$112load_method.5': [(<numba.core.ir.Assign object at 0x727f5e33c2b0>,
                                    173)],
             '$116call_method.7': [(<numba.core.ir.Assign object at 0x727f5e33dc30>,
                                    173)],
             '$118compare_op.8': [(<numba.core.ir.Assign object at 0x727f5e33de10>,
                                   173)],
             '$120return_value.9': [(<numba.core.ir.Assign object at 0x727f5e33f8e0>,
                                     173)],
             '$12unary_negative.4': [(<numba.core.ir.Assign object at 0x727f5e48c160>,
                                      90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f5e34ac50>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f5e35c040>,
                                   0)],
             '$20compare_op.7': [(<numba.core.ir.Assign object at 0x727f5e48c340>,
                                  90)],
             '$22pred': [(<numba.core.ir.Assign object at 0x727f5e495330>, 90)],
             '$26compare_op.2': [(<numba.core.ir.Assign object at 0x727f5e4a5600>,
                                  91)],
             '$28pred': [(<numba.core.ir.Assign object at 0x727f5e4a7460>, 91)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f5e35cbe0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f5e35cd00>,
                                      0)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f5e35d4e0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f5e35d600>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f5e35d840>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f5e35d9c0>,
                                      0)],
             '$50unary_negative.4': [(<numba.core.ir.Assign object at 0x727f5e4c2800>,
                                      127)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f5e35dea0>,
                                        0)],
             '$58compare_op.7': [(<numba.core.ir.Assign object at 0x727f5e4c29e0>,
                                  127)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f5e35dfc0>,
                                         0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x727f5e4cf9d0>,
                          127)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f5e35e410>,
                                        0)],
             '$64compare_op.2': [(<numba.core.ir.Assign object at 0x727f5e4dfd60>,
                                  131)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f5e35e560>,
                                      0)],
             '$66pred': [(<numba.core.ir.Assign object at 0x727f5e4e5b40>,
                          131)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f5e35ea40>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f5e35eb90>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f5e35ed40>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f5e35ee60>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f5e35ef50>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f5e35f070>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f5e35f190>,
                                  80)],
             '$80pred': [(<numba.core.ir.Assign object at 0x727f5e4ff2e0>,
                          165)],
             '$82load_global.0': [(<numba.core.ir.Assign object at 0x727f5e30dcf0>,
                                   169)],
             '$84load_method.1': [(<numba.core.ir.Assign object at 0x727f5e30ded0>,
                                   169)],
             '$88call_method.3': [(<numba.core.ir.Assign object at 0x727f5e30fb80>,
                                   169)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f5e34b100>,
                                    0)],
             '$90load_global.4': [(<numba.core.ir.Assign object at 0x727f5e30fd60>,
                                   169)],
             '$92load_method.5': [(<numba.core.ir.Assign object at 0x727f5e317280>,
                                   169)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f5e35fac0>,
                                      194)],
             '$96call_method.7': [(<numba.core.ir.Assign object at 0x727f5e31cc40>,
                                   169)],
             '$98compare_op.8': [(<numba.core.ir.Assign object at 0x727f5e31ce20>,
                                  169)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f5e35c640>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f5e35c8e0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f5e35ca60>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f5e35cf40>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f5e484d90>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f5e35d1e0>,
                                0)],
             '$const42.1': [(<numba.core.ir.Assign object at 0x727f5e4c09a0>,
                             127)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f5e35d360>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f5e35db40>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f5e35dcc0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f5e35e260>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f5e35e6e0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f5e35e860>,
                                0)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x727f5e496cb0>,
                           90)],
             '$phi62.0': [(<numba.core.ir.Assign object at 0x727f5e4d5390>,
                           127)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f5e34b610>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f5e35e0e0>,
                             80)],
             'bool22': [(<numba.core.ir.Assign object at 0x727f5e48dde0>, 90)],
             'bool28': [(<numba.core.ir.Assign object at 0x727f5e4a5780>, 91)],
             'bool60': [(<numba.core.ir.Assign object at 0x727f5e4cc4c0>, 127)],
             'bool66': [(<numba.core.ir.Assign object at 0x727f5e4dfcd0>, 131)],
             'bool80': [(<numba.core.ir.Assign object at 0x727f5e4ff070>, 165)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f5e34b520>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f5e35f460>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f5e35c4c0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f5e34a740>,
                                90),
                               (<numba.core.ir.Assign object at 0x727f5e34a8f0>,
                                127)],
             'threshold': [(<numba.core.ir.Assign object at 0x727f5e34b8e0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5e34bb50>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x727f5e34a800>, 90),
                    (<numba.core.ir.Assign object at 0x727f5e4b9360>, 121)],
             'x1': [(<numba.core.ir.Assign object at 0x727f5e34a9b0>, 127),
                    (<numba.core.ir.Assign object at 0x727f5e4fba00>, 159)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x727f5e34b7c0>,
                           0)]})
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e367280>
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - Fix SSA violator on var stencil_index
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,273 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,274 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,275 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - first assign: stencil_index
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - replaced with: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,276 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: x0 = const(int, 0)
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,277 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const42.1 + index00
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - replaced with: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,278 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,279 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367fa0>
2025-03-21 20:14:13,280 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {90: [<numba.core.ir.Assign object at 0x727f5e3668f0>],
             127: [<numba.core.ir.Assign object at 0x727f5e367580>]})
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,281 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,282 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,283 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,284 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,285 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: x0 = const(int, 0)
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,286 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,287 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,288 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e367fa0>
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - Fix SSA violator on var x0
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,289 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,290 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,291 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - first assign: x0
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,292 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - on stmt: x0 = const(int, 0)
2025-03-21 20:14:13,293 - numba.core.ssa - DEBUG - replaced with: x0.1 = const(int, 0)
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,294 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,295 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,296 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e366ad0>
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {90: [<numba.core.ir.Assign object at 0x727f5e3679a0>],
             121: [<numba.core.ir.Assign object at 0x727f5e367eb0>]})
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,297 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,298 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,299 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$phi24.0 = x0
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,300 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - find_def_from_top label 91
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - idom 90 from label 91
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - find_def_from_bottom label 90
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - on stmt: x0.1 = const(int, 0)
2025-03-21 20:14:13,301 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,302 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,303 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,304 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,304 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_top label 169
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - idom 165 from label 169
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_bottom label 165
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_top label 165
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - idom 127 from label 165
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_top label 127
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 127
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_bottom label 123
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_top label 123
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - idom 90 from label 123
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_bottom label 90
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_bottom label 121
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - incoming_def x0.1 = const(int, 0)
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_bottom label 91
2025-03-21 20:14:13,305 - numba.core.ssa - DEBUG - find_def_from_top label 91
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - idom 90 from label 91
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - find_def_from_bottom label 90
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - replaced with: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,306 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - find_def_from_top label 173
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - idom 165 from label 173
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - find_def_from_bottom label 165
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - find_def_from_top label 165
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - idom 127 from label 165
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - replaced with: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e3676d0>
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,307 - numba.core.ssa - DEBUG - Fix SSA violator on var x1
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,308 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,309 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,310 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,311 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: x0.1 = const(int, 0)
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1147), Var(x0.1, audio.py:1149), Var(x0, audio.py:1147)], incoming_blocks=[123, 121, 91])
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - first assign: x1
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,312 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - replaced with: x1.1 = const(int, 0)
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,313 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,314 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5e367ee0>
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {127: [<numba.core.ir.Assign object at 0x727f5e3670d0>],
             159: [<numba.core.ir.Assign object at 0x727f5e367f40>]})
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,315 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,316 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,317 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,318 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,319 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: x0.1 = const(int, 0)
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1147), Var(x0.1, audio.py:1149), Var(x0, audio.py:1147)], incoming_blocks=[123, 121, 91])
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$phi62.0 = x1
2025-03-21 20:14:13,320 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - find_def_from_top label 131
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - idom 127 from label 131
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - on stmt: x1.1 = const(int, 0)
2025-03-21 20:14:13,321 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - find_def_from_top label 169
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - idom 165 from label 169
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - find_def_from_bottom label 165
2025-03-21 20:14:13,322 - numba.core.ssa - DEBUG - find_def_from_top label 165
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 165
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - find_def_from_bottom label 161
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - find_def_from_top label 161
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - idom 127 from label 161
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - find_def_from_bottom label 131
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - find_def_from_top label 131
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - idom 127 from label 131
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - find_def_from_bottom label 159
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - incoming_def x1.1 = const(int, 0)
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - replaced with: $96call_method.7 = call $92load_method.5(x1.2, func=$92load_method.5, args=[Var(x1.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,323 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - find_def_from_top label 173
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - idom 165 from label 173
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - find_def_from_bottom label 165
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - replaced with: $116call_method.7 = call $112load_method.5(x1.2, func=$112load_method.5, args=[Var(x1.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,324 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,325 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,325 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5e366fb0>
2025-03-21 20:14:13,325 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4388)
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:13,333 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1']
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - stack ['$10call_function.4']
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:13,334 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:13,335 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:13,335 - numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(bool, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-03-21 20:14:13,340 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:13,340 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e386230>
2025-03-21 20:14:13,340 - numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
2025-03-21 20:14:13,340 - numba.core.ssa - DEBUG - on stmt: dtype = arg(1, name=dtype)
2025-03-21 20:14:13,340 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-03-21 20:14:13,340 - numba.core.ssa - DEBUG - on stmt: $8load_deref.3 = freevar(retty: array(bool, 1d, C))
2025-03-21 20:14:13,340 - numba.core.ssa - DEBUG - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,340 - numba.core.ssa - DEBUG - on stmt: $12return_value.5 = cast(value=$10call_function.4)
2025-03-21 20:14:13,340 - numba.core.ssa - DEBUG - on stmt: return $12return_value.5
2025-03-21 20:14:13,341 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x727f5e387fa0>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x727f5e3b4100>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5e3850c0>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x727f5e387d90>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x727f5e386aa0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x727f5e386140>, 0)]})
2025-03-21 20:14:13,341 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e386230>
2025-03-21 20:14:13,353 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4264)
           2	LOAD_FAST(arg=0, lineno=4267)
           4	LOAD_METHOD(arg=0, lineno=4267)
           6	LOAD_FAST(arg=1, lineno=4267)
           8	LOAD_FAST(arg=2, lineno=4267)
          10	CALL_METHOD(arg=2, lineno=4267)
          12	RETURN_VALUE(arg=None, lineno=4267)
2025-03-21 20:14:13,353 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4264)
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4267)
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4267)
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - stack ['$arrtype2.0']
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4267)
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - stack ['$4load_method.1']
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4267)
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$size6.2']
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4267)
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$size6.2', '$align8.3']
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4267)
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - stack ['$10call_method.4']
2025-03-21 20:14:13,354 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:13,355 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:13,355 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:13,355 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:13,355 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,355 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,355 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:13,355 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:13,355 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:13,355 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:13,356 - numba.core.interpreter - DEBUG - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-03-21 20:14:13,362 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:13,362 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3d7070>
2025-03-21 20:14:13,362 - numba.core.ssa - DEBUG - on stmt: arrtype = arg(0, name=arrtype)
2025-03-21 20:14:13,362 - numba.core.ssa - DEBUG - on stmt: size = arg(1, name=size)
2025-03-21 20:14:13,362 - numba.core.ssa - DEBUG - on stmt: align = arg(2, name=align)
2025-03-21 20:14:13,362 - numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
2025-03-21 20:14:13,362 - numba.core.ssa - DEBUG - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,362 - numba.core.ssa - DEBUG - on stmt: $12return_value.5 = cast(value=$10call_method.4)
2025-03-21 20:14:13,362 - numba.core.ssa - DEBUG - on stmt: return $12return_value.5
2025-03-21 20:14:13,363 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x727f5e3d63e0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x727f5e3d64d0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x727f5e3d5f90>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x727f5e3d5cf0>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x727f5e3d5210>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x727f5e3d4be0>, 0)]})
2025-03-21 20:14:13,363 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e3d7070>
2025-03-21 20:14:13,366 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4259)
           2	LOAD_GLOBAL(arg=0, lineno=4260)
           4	LOAD_FAST(arg=1, lineno=4260)
           6	LOAD_FAST(arg=2, lineno=4260)
           8	CALL_FUNCTION(arg=2, lineno=4260)
          10	RETURN_VALUE(arg=None, lineno=4260)
2025-03-21 20:14:13,366 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:13,366 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,366 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:13,366 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4259)
2025-03-21 20:14:13,366 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,366 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4260)
2025-03-21 20:14:13,366 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4260)
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4260)
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$allocsize4.1']
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4260)
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4260)
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - stack ['$8call_function.3']
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:13,367 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:13,368 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:13,368 - numba.core.interpreter - DEBUG - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3d5930>
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - on stmt: cls = arg(0, name=cls)
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - on stmt: allocsize = arg(1, name=allocsize)
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - on stmt: align = arg(2, name=align)
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - on stmt: $10return_value.4 = cast(value=$8call_function.3)
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - on stmt: return $10return_value.4
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x727f5e274be0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5e2746a0>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x727f5e274ac0>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x727f5e274520>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x727f5e3d57b0>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x727f5e3d5450>, 0)]})
2025-03-21 20:14:13,373 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e3d5930>
2025-03-21 20:14:13,457 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	LOAD_FAST(arg=0, lineno=201)
           4	LOAD_DEREF(arg=0, lineno=201)
           6	BINARY_SUBSCR(arg=None, lineno=201)
           8	RETURN_VALUE(arg=None, lineno=201)
2025-03-21 20:14:13,457 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:13,457 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,457 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:13,457 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=200)
2025-03-21 20:14:13,457 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=201)
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_DEREF(arg=0, lineno=201)
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - stack ['$tup2.0']
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=201)
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - stack ['$tup2.0', '$4load_deref.1']
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=201)
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:13,458 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:13,459 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$tup2.0'}), (4, {'res': '$4load_deref.1'}), (6, {'index': '$4load_deref.1', 'target': '$tup2.0', 'res': '$6binary_subscr.2'}), (8, {'retval': '$6binary_subscr.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:13,459 - numba.core.interpreter - DEBUG - label 0:
    tup = arg(0, name=tup)                   ['tup']
    idx = arg(1, name=idx)                   ['idx']
    $4load_deref.1 = freevar(idx_val: 0)     ['$4load_deref.1']
    $6binary_subscr.2 = getitem(value=tup, index=$4load_deref.1, fn=<built-in function getitem>) ['$4load_deref.1', '$6binary_subscr.2', 'tup']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

2025-03-21 20:14:13,463 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:13,463 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e3877c0>
2025-03-21 20:14:13,463 - numba.core.ssa - DEBUG - on stmt: tup = arg(0, name=tup)
2025-03-21 20:14:13,463 - numba.core.ssa - DEBUG - on stmt: idx = arg(1, name=idx)
2025-03-21 20:14:13,464 - numba.core.ssa - DEBUG - on stmt: $4load_deref.1 = freevar(idx_val: 0)
2025-03-21 20:14:13,464 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=tup, index=0, index_var=$4load_deref.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,464 - numba.core.ssa - DEBUG - on stmt: $8return_value.3 = cast(value=$6binary_subscr.2)
2025-03-21 20:14:13,464 - numba.core.ssa - DEBUG - on stmt: return $8return_value.3
2025-03-21 20:14:13,464 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$4load_deref.1': [(<numba.core.ir.Assign object at 0x727f5e1149d0>,
                                 0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f5e114f10>,
                                    0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x727f5e114cd0>,
                                   0)],
             'idx': [(<numba.core.ir.Assign object at 0x727f5e114100>, 0)],
             'tup': [(<numba.core.ir.Assign object at 0x727f5e1144f0>, 0)]})
2025-03-21 20:14:13,464 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e3877c0>
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1161)
           2	LOAD_GLOBAL(arg=0, lineno=1177)
           4	LOAD_FAST(arg=0, lineno=1177)
           6	LOAD_FAST(arg=1, lineno=1177)
           8	LOAD_FAST(arg=2, lineno=1177)
          10	CALL_FUNCTION(arg=3, lineno=1177)
          12	LOAD_FAST(arg=3, lineno=1177)
          14	LOAD_CONST(arg=1, lineno=1177)
          16	LOAD_CONST(arg=1, lineno=1177)
          18	BUILD_SLICE(arg=2, lineno=1177)
          20	STORE_SUBSCR(arg=None, lineno=1177)
          22	LOAD_CONST(arg=1, lineno=1177)
          24	RETURN_VALUE(arg=None, lineno=1177)
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1161)
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1177)
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1177)
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=1177)
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=1177)
2025-03-21 20:14:13,731 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$threshold6.2']
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=1177)
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$threshold6.2', '$zero_pos8.3']
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=1177)
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - stack ['$10call_function.4']
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=1177)
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - stack ['$10call_function.4', '$y12.5']
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=1177)
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - stack ['$10call_function.4', '$y12.5', '$const14.6']
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=BUILD_SLICE(arg=2, lineno=1177)
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - stack ['$10call_function.4', '$y12.5', '$const14.6', '$const16.7']
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=STORE_SUBSCR(arg=None, lineno=1177)
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - stack ['$10call_function.4', '$y12.5', '$18build_slice.9']
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_CONST(arg=1, lineno=1177)
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=1177)
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - stack ['$const22.10']
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:13,732 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:13,733 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:13,733 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:13,733 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,733 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:13,733 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:13,733 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:13,733 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:13,733 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'res': '$threshold6.2'}), (8, {'res': '$zero_pos8.3'}), (10, {'func': '$2load_global.0', 'args': ['$x4.1', '$threshold6.2', '$zero_pos8.3'], 'res': '$10call_function.4'}), (12, {'res': '$y12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$const16.7'}), (18, {'start': '$const14.6', 'stop': '$const16.7', 'step': None, 'res': '$18build_slice.9', 'slicevar': '$18build_slice.8'}), (20, {'target': '$y12.5', 'index': '$18build_slice.9', 'value': '$10call_function.4'}), (22, {'res': '$const22.10'}), (24, {'retval': '$const22.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:13,734 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x727f5ef32710>) ['$2load_global.0']
    $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1161), Var(threshold, audio.py:1161), Var(zero_pos, audio.py:1161)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', 'threshold', 'x', 'zero_pos']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $const16.7 = const(NoneType, None)       ['$const16.7']
    $18build_slice.8 = global(slice: <class 'slice'>) ['$18build_slice.8']
    $18build_slice.9 = call $18build_slice.8($const14.6, $const16.7, func=$18build_slice.8, args=(Var($const14.6, audio.py:1177), Var($const16.7, audio.py:1177)), kws=(), vararg=None, varkwarg=None, target=None) ['$18build_slice.8', '$18build_slice.9', '$const14.6', '$const16.7']
    y[$18build_slice.9] = $10call_function.4 ['$10call_function.4', '$18build_slice.9', 'y']
    $const22.10 = const(NoneType, None)      ['$const22.10']
    $24return_value.11 = cast(value=$const22.10) ['$24return_value.11', '$const22.10']
    return $24return_value.11                ['$24return_value.11']

2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e0b7c10>
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - on stmt: y = arg(3, name=y)
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x727f5ef32710>)
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - on stmt: $10call_function.4 = call $2load_global.0(x, threshold, zero_pos, func=$2load_global.0, args=[Var(x, audio.py:1161), Var(threshold, audio.py:1161), Var(zero_pos, audio.py:1161)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - on stmt: $const16.7 = const(NoneType, None)
2025-03-21 20:14:13,739 - numba.core.ssa - DEBUG - on stmt: $18build_slice.8 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,740 - numba.core.ssa - DEBUG - on stmt: $18build_slice.9 = call $18build_slice.8($const14.6, $const16.7, func=$18build_slice.8, args=(Var($const14.6, audio.py:1177), Var($const16.7, audio.py:1177)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,740 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $10call_function.4
2025-03-21 20:14:13,740 - numba.core.ssa - DEBUG - on stmt: $const22.10 = const(NoneType, None)
2025-03-21 20:14:13,740 - numba.core.ssa - DEBUG - on stmt: $24return_value.11 = cast(value=$const22.10)
2025-03-21 20:14:13,740 - numba.core.ssa - DEBUG - on stmt: return $24return_value.11
2025-03-21 20:14:13,740 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x727f5e0c45b0>,
                                     0)],
             '$18build_slice.8': [(<numba.core.ir.Assign object at 0x727f5e0c4af0>,
                                   0)],
             '$18build_slice.9': [(<numba.core.ir.Assign object at 0x727f5e0c4c10>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x727f5e0c4fd0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5e0c4070>,
                                  0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x727f5e0c47f0>,
                             0)],
             '$const16.7': [(<numba.core.ir.Assign object at 0x727f5e0c4970>,
                             0)],
             '$const22.10': [(<numba.core.ir.Assign object at 0x727f5e0c4e50>,
                              0)],
             'threshold': [(<numba.core.ir.Assign object at 0x727f5e0b7310>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5e0b7580>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5e0b7eb0>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x727f5e0b7d90>,
                           0)]})
2025-03-21 20:14:13,740 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e0b7c10>
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=3, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=3, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=4, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=4, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=4, lineno=5)
          40	LOAD_CONST(arg=2, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=3, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=2, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=5, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=6, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=4, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:13,782 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=3, lineno=2)
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=3)
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:13,783 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=4, lineno=3)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=4, lineno=4)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=5)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:13,784 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=6)
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:13,785 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:13,786 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=8)
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=5, lineno=6)
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:13,787 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=6, lineno=7)
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:13,788 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:13,789 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:13,789 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:13,789 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:13,789 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:13,790 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:13,790 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:13,790 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:13,790 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:13,790 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:13,790 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:13,792 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, 0)              ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 0)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,810 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,811 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,812 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 194
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,813 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 115
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 123
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 121
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: x0 = const(int, 0)
2025-03-21 20:14:13,814 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 127
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const42.1 + index00
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 131
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,815 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 153
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 161
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 159
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 165
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 169
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,816 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 173
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,817 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,818 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,818 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,818 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 193
2025-03-21 20:14:13,818 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df96dd0>
2025-03-21 20:14:13,818 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,820 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$100return_value.9': [(<numba.core.ir.Assign object at 0x727f5df54970>,
                                     169)],
             '$102load_global.0': [(<numba.core.ir.Assign object at 0x727f5df64be0>,
                                    173)],
             '$104load_method.1': [(<numba.core.ir.Assign object at 0x727f5df65000>,
                                    173)],
             '$108call_method.3': [(<numba.core.ir.Assign object at 0x727f5df66bf0>,
                                    173)],
             '$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f5df84970>,
                                   0)],
             '$110load_global.4': [(<numba.core.ir.Assign object at 0x727f5df66dd0>,
                                    173)],
             '$112load_method.5': [(<numba.core.ir.Assign object at 0x727f5df66e00>,
                                    173)],
             '$116call_method.7': [(<numba.core.ir.Assign object at 0x727f5df6fc10>,
                                    173)],
             '$118compare_op.8': [(<numba.core.ir.Assign object at 0x727f5df6fee0>,
                                   173)],
             '$120return_value.9': [(<numba.core.ir.Assign object at 0x727f5df6e2f0>,
                                     173)],
             '$12unary_negative.4': [(<numba.core.ir.Assign object at 0x727f5e0e0fa0>,
                                      90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f5df84c10>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f5df84d90>,
                                   0)],
             '$20compare_op.7': [(<numba.core.ir.Assign object at 0x727f5e0e1180>,
                                  90)],
             '$22pred': [(<numba.core.ir.Assign object at 0x727f5e0ea170>, 90)],
             '$26compare_op.2': [(<numba.core.ir.Assign object at 0x727f5e0b6a10>,
                                  91)],
             '$28pred': [(<numba.core.ir.Assign object at 0x727f5e0b4b20>, 91)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f5df85930>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f5df85a50>,
                                      0)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f5df86230>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f5df86350>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f5df86590>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f5df86710>,
                                      0)],
             '$50unary_negative.4': [(<numba.core.ir.Assign object at 0x727f5df04880>,
                                      127)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f5df86bf0>,
                                        0)],
             '$58compare_op.7': [(<numba.core.ir.Assign object at 0x727f5df04a60>,
                                  127)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f5df86d10>,
                                         0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x727f5df09a50>,
                          127)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f5df87160>,
                                        0)],
             '$64compare_op.2': [(<numba.core.ir.Assign object at 0x727f5df19ea0>,
                                  131)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f5df872b0>,
                                      0)],
             '$66pred': [(<numba.core.ir.Assign object at 0x727f5df1bb80>,
                          131)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f5df87790>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f5df878e0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f5df87a90>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f5df87bb0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f5df87ca0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f5df87dc0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f5df87ee0>,
                                  80)],
             '$80pred': [(<numba.core.ir.Assign object at 0x727f5df35360>,
                          165)],
             '$82load_global.0': [(<numba.core.ir.Assign object at 0x727f5df43c10>,
                                   169)],
             '$84load_method.1': [(<numba.core.ir.Assign object at 0x727f5df43e50>,
                                   169)],
             '$88call_method.3': [(<numba.core.ir.Assign object at 0x727f5df45c00>,
                                   169)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f5df847f0>,
                                    0)],
             '$90load_global.4': [(<numba.core.ir.Assign object at 0x727f5df45de0>,
                                   169)],
             '$92load_method.5': [(<numba.core.ir.Assign object at 0x727f5df4d300>,
                                   169)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f5df8c850>,
                                      194)],
             '$96call_method.7': [(<numba.core.ir.Assign object at 0x727f5df4ec80>,
                                   169)],
             '$98compare_op.8': [(<numba.core.ir.Assign object at 0x727f5df4ee60>,
                                  169)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f5df85390>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f5df85630>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f5df857b0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f5df85c90>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f5e0ddbd0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f5df85f30>,
                                0)],
             '$const42.1': [(<numba.core.ir.Assign object at 0x727f5df02a10>,
                             127)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f5df860b0>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f5df86890>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f5df86a10>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f5df86fb0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f5df87430>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f5df875b0>,
                                0)],
             '$phi24.0': [(<numba.core.ir.Assign object at 0x727f5e0ebaf0>,
                           90)],
             '$phi62.0': [(<numba.core.ir.Assign object at 0x727f5df0b3d0>,
                           127)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f5df84370>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f5df86e30>,
                             80)],
             'bool22': [(<numba.core.ir.Assign object at 0x727f5e0e2c20>, 90)],
             'bool28': [(<numba.core.ir.Assign object at 0x727f5e0b6770>, 91)],
             'bool60': [(<numba.core.ir.Assign object at 0x727f5df06500>, 127)],
             'bool66': [(<numba.core.ir.Assign object at 0x727f5df19de0>, 131)],
             'bool80': [(<numba.core.ir.Assign object at 0x727f5df35090>, 165)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f5df84550>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f5df8c1f0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f5df85210>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f5e0dda20>,
                                90),
                               (<numba.core.ir.Assign object at 0x727f5df78880>,
                                127)],
             'threshold': [(<numba.core.ir.Assign object at 0x727f5df84190>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5df84070>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x727f5df2f730>, 90),
                    (<numba.core.ir.Assign object at 0x727f5e0ff3d0>, 121)],
             'x1': [(<numba.core.ir.Assign object at 0x727f5df7b700>, 127),
                    (<numba.core.ir.Assign object at 0x727f5df2db70>, 159)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x727f5df842b0>,
                           0)]})
2025-03-21 20:14:13,820 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5df8fca0>
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - Fix SSA violator on var stencil_index
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,821 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,822 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,823 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - first assign: stencil_index
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - replaced with: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,824 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,827 - numba.core.ssa - DEBUG - on stmt: x0 = const(int, 0)
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const42.1 + index00
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - replaced with: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,828 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,829 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,830 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8ff10>
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {90: [<numba.core.ir.Assign object at 0x727f5df8f250>],
             127: [<numba.core.ir.Assign object at 0x727f5df8fbb0>]})
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,831 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,832 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,833 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,834 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: x0 = const(int, 0)
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,835 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,836 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,837 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,838 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8ff10>
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - Fix SSA violator on var x0
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,839 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,840 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,841 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - first assign: x0
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,842 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: x0 = const(int, 0)
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - replaced with: x0.1 = const(int, 0)
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,843 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,844 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,845 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f220>
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {90: [<numba.core.ir.Assign object at 0x727f5df8f880>],
             121: [<numba.core.ir.Assign object at 0x727f5df8f0d0>]})
2025-03-21 20:14:13,846 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,847 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,848 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,849 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$phi24.0 = x0
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - find_def_from_top label 91
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - idom 90 from label 91
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - find_def_from_bottom label 90
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,850 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: x0.1 = const(int, 0)
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,851 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,852 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - find_def_from_top label 169
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - idom 165 from label 169
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - find_def_from_bottom label 165
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - find_def_from_top label 165
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - idom 127 from label 165
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - find_def_from_top label 127
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 127
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - find_def_from_bottom label 123
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - find_def_from_top label 123
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - idom 90 from label 123
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - find_def_from_bottom label 90
2025-03-21 20:14:13,853 - numba.core.ssa - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - find_def_from_bottom label 121
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - incoming_def x0.1 = const(int, 0)
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - find_def_from_bottom label 91
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - find_def_from_top label 91
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - idom 90 from label 91
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - find_def_from_bottom label 90
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - replaced with: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,854 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - find_def var='x0' stmt=$108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - find_def_from_top label 173
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - idom 165 from label 173
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - find_def_from_bottom label 165
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - find_def_from_top label 165
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - idom 127 from label 165
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - replaced with: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,855 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f220>
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - Fix SSA violator on var x1
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,856 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,857 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,858 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,859 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: x0.1 = const(int, 0)
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1147), Var(x0.1, audio.py:1149), Var(x0, audio.py:1147)], incoming_blocks=[123, 121, 91])
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - first assign: x1
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,860 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,861 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,862 - numba.core.ssa - DEBUG - on stmt: x1 = const(int, 0)
2025-03-21 20:14:13,862 - numba.core.ssa - DEBUG - replaced with: x1.1 = const(int, 0)
2025-03-21 20:14:13,862 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,863 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f5df8f9d0>
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {127: [<numba.core.ir.Assign object at 0x727f5df8f220>],
             159: [<numba.core.ir.Assign object at 0x727f5df96b60>]})
2025-03-21 20:14:13,864 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: threshold = arg(1, name=threshold)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: zero_pos = arg(2, name=zero_pos)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, 0)
2025-03-21 20:14:13,865 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 0)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,866 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 194
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 194
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 90
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,867 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: $20compare_op.7 = $12unary_negative.4 <= x0
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: bool22 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: $phi24.0 = x0
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: branch $22pred, 91, 123
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 91
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: $26compare_op.2 = x0 <= threshold
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: bool28 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: branch $28pred, 115, 127
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 115
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - on stmt: jump 121
2025-03-21 20:14:13,868 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 123
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 121
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: x0.1 = const(int, 0)
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: jump 127
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 127
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1147), Var(x0.1, audio.py:1149), Var(x0, audio.py:1147)], incoming_blocks=[123, 121, 91])
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: $const42.1 = const(int, -1)
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const42.1 + index00
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: $58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$58compare_op.7 = $50unary_negative.4 <= x1
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: bool60 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,869 - numba.core.ssa - DEBUG - on stmt: $phi62.0 = x1
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$phi62.0 = x1
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - on stmt: branch $60pred, 131, 161
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 131
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - on stmt: $64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$64compare_op.2 = x1 <= threshold
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - find_def_from_top label 131
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - idom 127 from label 131
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - on stmt: bool66 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - on stmt: branch $66pred, 153, 165
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 153
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - on stmt: jump 159
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 159
2025-03-21 20:14:13,870 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: x1.1 = const(int, 0)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 165
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: bool80 = global(bool: <class 'bool'>)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: branch $80pred, 169, 173
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 169
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: $82load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: $84load_method.1 = getattr(value=$82load_global.0, attr=signbit)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: $88call_method.3 = call $84load_method.1(x0.2, func=$84load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: $90load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: $92load_method.5 = getattr(value=$90load_global.4, attr=signbit)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - on stmt: $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - find_def_from_top label 169
2025-03-21 20:14:13,871 - numba.core.ssa - DEBUG - idom 165 from label 169
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - find_def_from_bottom label 165
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - find_def_from_top label 165
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 165
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - find_def_from_bottom label 161
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - find_def_from_top label 161
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - idom 127 from label 161
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - find_def_from_bottom label 131
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - find_def_from_top label 131
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - idom 127 from label 131
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - find_def_from_bottom label 127
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - find_def_from_bottom label 159
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - incoming_def x1.1 = const(int, 0)
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - replaced with: $96call_method.7 = call $92load_method.5(x1.2, func=$92load_method.5, args=[Var(x1.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - on stmt: $98compare_op.8 = $88call_method.3 != $96call_method.7
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - on stmt: $100return_value.9 = cast(value=$98compare_op.8)
2025-03-21 20:14:13,872 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $100return_value.9
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 173
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: $102load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: $104load_method.1 = getattr(value=$102load_global.0, attr=sign)
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: $108call_method.3 = call $104load_method.1(x0.2, func=$104load_method.1, args=[Var(x0.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: $110load_global.4 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: $112load_method.5 = getattr(value=$110load_global.4, attr=sign)
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - find_def var='x1' stmt=$116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - find_def_from_top label 173
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - idom 165 from label 173
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - find_def_from_bottom label 165
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - replaced with: $116call_method.7 = call $112load_method.5(x1.2, func=$112load_method.5, args=[Var(x1.2, audio.py:1156)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: $118compare_op.8 = $108call_method.3 != $116call_method.7
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: $120return_value.9 = cast(value=$118compare_op.8)
2025-03-21 20:14:13,873 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $120return_value.9
2025-03-21 20:14:13,874 - numba.core.ssa - DEBUG - on stmt: jump 193
2025-03-21 20:14:13,874 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 193
2025-03-21 20:14:13,874 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f5df8f9d0>
2025-03-21 20:14:13,874 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:14,755 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-03-21 20:14:14,755 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:14,755 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:14,755 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:14,755 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-03-21 20:14:14,755 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-03-21 20:14:14,756 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:14,757 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:14,758 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:14,758 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:14,758 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:14,758 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:14,758 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:14,758 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-03-21 20:14:14,759 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-03-21 20:14:14,759 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:14,759 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:14,759 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:14,759 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-03-21 20:14:14,760 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:14,761 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:14,762 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:14,762 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:14,762 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:14,762 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:14,762 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:14,763 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-03-21 20:14:14,765 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1063)
           2	LOAD_GLOBAL(arg=0, lineno=1077)
           4	LOAD_FAST(arg=0, lineno=1077)
           6	CALL_FUNCTION(arg=1, lineno=1077)
           8	LOAD_FAST(arg=1, lineno=1077)
          10	LOAD_CONST(arg=1, lineno=1077)
          12	LOAD_CONST(arg=1, lineno=1077)
          14	BUILD_SLICE(arg=2, lineno=1077)
          16	STORE_SUBSCR(arg=None, lineno=1077)
          18	LOAD_CONST(arg=1, lineno=1077)
          20	RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:14,765 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:14,765 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:14,765 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1063)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1077)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1077)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1077)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1077)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1077)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1077)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:14,766 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:14,767 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:14,768 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:14,773 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:14,773 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5df2d7e0>
2025-03-21 20:14:14,773 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:14,773 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:14,773 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>)
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:14,774 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f5df2fd30>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f5df2fc10>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f5df2c220>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5df2e320>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f5df2e020>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5df2f700>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f5df2feb0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5df2f9d0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5df2e5c0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5df2e4a0>, 0)]})
2025-03-21 20:14:14,775 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5df2d7e0>
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:14,797 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:14,798 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:14,799 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:14,800 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:14,801 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:14,802 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:14,803 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:14,803 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:14,803 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:14,803 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:14,803 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:14,804 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:14,804 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:14,804 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:14,804 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:14,804 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:14,805 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:14,805 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:14,805 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:14,806 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:14,817 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:14,817 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e148d60>
2025-03-21 20:14:14,817 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:14,818 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:14,819 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e148d60>
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e148d60>
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e148d60>
2025-03-21 20:14:14,820 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e148d60>
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:14,821 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-03-21 20:14:14,822 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:14,822 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:14,822 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:14,822 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:14,822 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:14,822 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e148d60>
2025-03-21 20:14:14,822 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:14,823 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f5e0548b0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f5e0d0d60>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f5df18220>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f5e054af0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f5e054e20>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f5e0d0e20>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f5e0555d0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f5df7b730>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f5e0d0820>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f5e0541f0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f5e054070>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f5e0d3b20>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f5e48dc00>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f5e48df60>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f5e48fa00>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f5e48de10>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f5e32ae90>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f5e32b130>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f5e32ae00>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f5e4e4250>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f5e0d21a0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f5e4e7640>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f5e4e40d0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f5e4cc400>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f5e4cc580>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f5e4cdea0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f5e4ce020>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f5e4cf8b0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f5e055210>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f5e3158a0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5df96ec0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5df183d0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f5df8f610>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f5e055420>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f5e055e10>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f5e054370>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f5e496bf0>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f5df2dd20>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f5e495240>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f5e48c100>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f5e329120>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f5e32ab00>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f5e32ac20>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f5e4e5a20>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f5e4e7430>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f5e496ef0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f5e0559c0>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f5e056aa0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f5e4d52d0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f5e054700>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f5e0d29b0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f5e0d1330>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f5e0d0fd0>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f5e057610>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f5e0558a0>, 0)]})
2025-03-21 20:14:14,824 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e148d60>
2025-03-21 20:14:15,072 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1063)
           2	LOAD_GLOBAL(arg=0, lineno=1077)
           4	LOAD_FAST(arg=0, lineno=1077)
           6	CALL_FUNCTION(arg=1, lineno=1077)
           8	LOAD_FAST(arg=1, lineno=1077)
          10	LOAD_CONST(arg=1, lineno=1077)
          12	LOAD_CONST(arg=1, lineno=1077)
          14	BUILD_SLICE(arg=2, lineno=1077)
          16	STORE_SUBSCR(arg=None, lineno=1077)
          18	LOAD_CONST(arg=1, lineno=1077)
          20	RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:15,072 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:15,072 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,072 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:15,072 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1063)
2025-03-21 20:14:15,072 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,072 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1077)
2025-03-21 20:14:15,072 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,072 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1077)
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1077)
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1077)
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1077)
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1077)
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:15,073 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:15,074 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:15,074 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:15,074 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:15,074 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:15,074 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:15,074 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:15,074 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:15,074 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:15,075 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:15,080 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:15,080 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4b8af0>
2025-03-21 20:14:15,080 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:15,080 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>)
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:15,081 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:15,082 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f5e34b7f0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f5e34a9b0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f5e35e560>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5e34a590>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f5e34bf70>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5e34b070>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f5e34bb80>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5e35edd0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5df94bb0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5df96dd0>, 0)]})
2025-03-21 20:14:15,082 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e4b8af0>
2025-03-21 20:14:15,105 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:15,106 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:15,107 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:15,108 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:15,109 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,110 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:15,111 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:15,112 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:15,113 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:15,114 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,114 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,114 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,115 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,115 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:15,115 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:15,115 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:15,115 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:15,116 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:15,116 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:15,116 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:15,118 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:15,133 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:15,133 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4b9d20>
2025-03-21 20:14:15,133 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:15,133 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:15,133 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:15,133 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:15,133 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:15,133 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:15,134 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,135 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4b9d20>
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4b9d20>
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4b9d20>
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:15,136 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4b9d20>
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:15,137 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:15,138 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:15,138 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-03-21 20:14:15,138 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:15,138 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:15,138 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:15,138 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:15,138 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:15,138 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4b9d20>
2025-03-21 20:14:15,138 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:15,140 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f5e02d900>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f5e05d0f0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f5e49a5c0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f5e02d630>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f5e02f970>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f5e02c130>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f5e02c6a0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f5e05fbe0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f5e05c4c0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f5e02e410>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f5e02e4d0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f5e05ee00>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f5e02faf0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f5e02fc40>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f5e02e9b0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f5e02f730>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f5e02e770>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f5e02dde0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f5e385a80>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f5e387820>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f5e05d810>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f5e385810>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f5e3847c0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f5e385480>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f5e385c30>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f5e385690>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f5e386470>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f5e384f10>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f5e02d150>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f5e386a70>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5e4fd1e0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5e49bfa0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f5e3671c0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f5e02c550>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f5e02e6e0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f5e02f9a0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f5e02fb80>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f5e49bdc0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f5e02e1a0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f5e02f850>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f5e02e050>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f5e02c8b0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f5e385c90>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f5e3842e0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f5e385e70>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f5e02e0b0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f5e02d990>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f5e02d8d0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f5e387640>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f5e02c400>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f5e05e2c0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f5e05c9a0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f5e05cc10>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f5e02d570>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f5e02d7e0>, 0)]})
2025-03-21 20:14:15,141 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e4b9d20>
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1063)
           2	LOAD_GLOBAL(arg=0, lineno=1077)
           4	LOAD_FAST(arg=0, lineno=1077)
           6	CALL_FUNCTION(arg=1, lineno=1077)
           8	LOAD_FAST(arg=1, lineno=1077)
          10	LOAD_CONST(arg=1, lineno=1077)
          12	LOAD_CONST(arg=1, lineno=1077)
          14	BUILD_SLICE(arg=2, lineno=1077)
          16	STORE_SUBSCR(arg=None, lineno=1077)
          18	LOAD_CONST(arg=1, lineno=1077)
          20	RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1063)
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1077)
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1077)
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1077)
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1077)
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:15,363 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1077)
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1077)
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:15,364 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:15,365 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:15,365 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:15,365 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:15,365 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:15,370 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:15,370 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4fc250>
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:15,371 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:15,372 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f54778580>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f547786a0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f54778a60>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5470fd00>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f54778040>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f54778280>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f54778400>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f547788e0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5470f490>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5470f220>, 0)]})
2025-03-21 20:14:15,372 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e4fc250>
2025-03-21 20:14:15,390 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:15,391 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:15,392 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:15,393 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,394 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:15,395 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:15,396 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:15,397 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:15,397 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:15,397 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:15,397 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:15,397 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,397 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,398 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,398 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,398 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:15,399 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:15,399 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:15,399 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:15,399 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:15,399 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:15,399 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:15,401 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:15,413 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:15,413 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547b35b0>
2025-03-21 20:14:15,413 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:15,413 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:15,413 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:15,413 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:15,413 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:15,414 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:15,415 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547b35b0>
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547b35b0>
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547b35b0>
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547b35b0>
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:15,416 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:15,417 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547b35b0>
2025-03-21 20:14:15,418 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:15,419 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f5479aec0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f547999c0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f54786d40>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f5479aad0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f5479a950>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f54799c00>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f54799e40>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f5478e230>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f5478e410>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f5479bb80>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f5479bca0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f5478eec0>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f547a44c0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f547a45e0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f547a4820>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f547a49a0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f547a4e80>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f547a4fa0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f547a53f0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f547a5540>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f54799780>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f547a5a20>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f547a5b70>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f547a5d20>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f547a5e40>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f547a5f30>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f547a6050>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f547a6170>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f5479b040>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f547a6aa0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f54785840>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f54786f20>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f5478cd30>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f5479a200>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f54799ed0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f5479ba00>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f5479bee0>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f5470f910>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f547a41c0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f547a4340>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f547a4b20>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f547a4ca0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f547a5240>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f547a56c0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f547a5840>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f5479b3d0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f547a50c0>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f5479b2e0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f547a6440>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f5479a380>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f54798d90>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f54799900>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f54799b40>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f54799d80>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f5479b580>, 0)]})
2025-03-21 20:14:15,419 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f547b35b0>
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1063)
           2	LOAD_GLOBAL(arg=0, lineno=1077)
           4	LOAD_FAST(arg=0, lineno=1077)
           6	CALL_FUNCTION(arg=1, lineno=1077)
           8	LOAD_FAST(arg=1, lineno=1077)
          10	LOAD_CONST(arg=1, lineno=1077)
          12	LOAD_CONST(arg=1, lineno=1077)
          14	BUILD_SLICE(arg=2, lineno=1077)
          16	STORE_SUBSCR(arg=None, lineno=1077)
          18	LOAD_CONST(arg=1, lineno=1077)
          20	RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1063)
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1077)
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1077)
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:15,673 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1077)
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1077)
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1077)
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1077)
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:15,674 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:15,675 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:15,675 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:15,675 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:15,675 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:15,675 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:15,675 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:15,675 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:15,677 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:15,682 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:15,682 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54586560>
2025-03-21 20:14:15,682 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:15,682 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:15,682 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>)
2025-03-21 20:14:15,682 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,682 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:15,682 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:15,682 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,683 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,683 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:15,683 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:15,683 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:15,683 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:15,683 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f545a0a90>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f545a0bb0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f5477b010>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f545a0250>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f545a0550>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f545a0790>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f545a0910>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5e34a260>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f547787c0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5477b040>, 0)]})
2025-03-21 20:14:15,683 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54586560>
2025-03-21 20:14:15,703 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:15,703 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:15,703 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,703 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:15,703 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:15,703 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:15,704 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:15,705 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:15,706 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:15,707 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:15,708 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:15,709 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:15,710 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,710 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,710 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,710 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,711 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:15,711 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:15,711 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:15,711 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:15,711 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:15,711 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:15,711 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:15,713 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545b3c70>
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,725 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:15,726 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545b3c70>
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545b3c70>
2025-03-21 20:14:15,727 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545b3c70>
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545b3c70>
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:15,728 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545b3c70>
2025-03-21 20:14:15,729 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:15,731 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f545a1d50>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f546d5c00>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f54561600>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f545a1ab0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f545a17e0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f5466d9c0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f545a0400>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f546f0100>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f546f03a0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f545a29e0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f545a2b00>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f546f3b50>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f545a32e0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f545a3400>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f545a3640>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f545a37c0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f545a3ca0>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f545a3dc0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f545ac250>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f545ac3a0>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f546d60b0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f545ac880>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f545ac9d0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f545acb80>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f545acca0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f545acd90>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f545aceb0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f545acfd0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f545a1ed0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f545ad900>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f54561db0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f54560e80>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f546f1ea0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f545a1090>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f545a00a0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f545a2860>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f545a2d40>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f54585d80>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f545a2fe0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f545a3160>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f545a3940>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f545a3ac0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f545ac0a0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f545ac520>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f545ac6a0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f545a2260>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f545a3f70>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f545a2170>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f545ad2a0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f545a1360>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f546d66b0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f546d5c30>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f5466d960>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f5463f280>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f545a2410>, 0)]})
2025-03-21 20:14:15,731 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f545b3c70>
2025-03-21 20:14:15,958 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1063)
           2	LOAD_GLOBAL(arg=0, lineno=1077)
           4	LOAD_FAST(arg=0, lineno=1077)
           6	CALL_FUNCTION(arg=1, lineno=1077)
           8	LOAD_FAST(arg=1, lineno=1077)
          10	LOAD_CONST(arg=1, lineno=1077)
          12	LOAD_CONST(arg=1, lineno=1077)
          14	BUILD_SLICE(arg=2, lineno=1077)
          16	STORE_SUBSCR(arg=None, lineno=1077)
          18	LOAD_CONST(arg=1, lineno=1077)
          20	RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1063)
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1077)
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1077)
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1077)
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1077)
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:15,959 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1077)
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1077)
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1077)
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1077)
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:15,960 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:15,961 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:15,961 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:15,961 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:15,966 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:15,966 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54584460>
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0debc0>)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1063)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1077), Var($const12.5, utils.py:1077)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:15,967 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:15,968 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f5435b7f0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f5435b910>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f5435bcd0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5435afb0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f5435b2b0>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5435b4f0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f5435b670>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5435bb50>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5435a740>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5435a4d0>, 0)]})
2025-03-21 20:14:15,968 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54584460>
2025-03-21 20:14:15,987 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:15,987 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:15,987 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,987 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:15,987 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:15,987 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,987 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:15,988 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:15,989 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:15,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:15,991 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:15,992 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:15,993 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:15,994 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:15,994 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,994 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,994 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,995 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:15,995 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:15,995 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:15,995 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:15,995 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:15,996 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:15,996 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:15,996 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:15,997 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:16,011 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:16,011 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5434efb0>
2025-03-21 20:14:16,011 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:16,011 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:16,011 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:16,011 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:16,011 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:16,011 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,012 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:16,013 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5434efb0>
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5434efb0>
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5434efb0>
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5434efb0>
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:16,014 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:16,015 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5434efb0>
2025-03-21 20:14:16,016 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:16,017 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f5438df60>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f5438ca60>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f54381de0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f5438db70>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f5438d9f0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f5438cca0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f5438cee0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f543852d0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f543854b0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f5438ec20>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f5438ed40>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f54385f60>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f5438f520>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f5438f640>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f5438f880>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f5438fa00>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f5438fee0>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f543a8040>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f543a8490>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f543a85e0>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f5438c820>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f543a8ac0>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f543a8c10>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f543a8dc0>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f543a8ee0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f543a8fd0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f543a90f0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f543a9210>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f5438e0e0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f543a9b40>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f543808e0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f54381fc0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f54383d90>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f5438d2a0>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f5438cf70>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f5438eaa0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f5438ef80>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f543749a0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f5438f220>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f5438f3a0>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f5438fb80>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f5438fd00>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f543a82e0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f543a8760>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f543a88e0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f5438e470>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f543a8160>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f5438e380>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f543a94e0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f5438d420>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f54387df0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f5438c9a0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f5438cbe0>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f5438ce20>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f5438e620>, 0)]})
2025-03-21 20:14:16,018 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54358670>
2025-03-21 20:14:16,589 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1080)
           2	LOAD_GLOBAL(arg=0, lineno=1094)
           4	LOAD_FAST(arg=0, lineno=1094)
           6	CALL_FUNCTION(arg=1, lineno=1094)
           8	LOAD_FAST(arg=1, lineno=1094)
          10	LOAD_CONST(arg=1, lineno=1094)
          12	LOAD_CONST(arg=1, lineno=1094)
          14	BUILD_SLICE(arg=2, lineno=1094)
          16	STORE_SUBSCR(arg=None, lineno=1094)
          18	LOAD_CONST(arg=1, lineno=1094)
          20	RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:16,589 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:16,589 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:16,589 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:16,589 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1080)
2025-03-21 20:14:16,589 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,589 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:16,590 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:16,591 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:16,592 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54151030>
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>)
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:16,597 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:16,598 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:16,598 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f54147e80>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f54147d90>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f54147940>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f541517e0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f54151390>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f541472e0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f54146e00>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f541479d0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f541505b0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f54150d00>, 0)]})
2025-03-21 20:14:16,598 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54151030>
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:16,616 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,617 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:16,618 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:16,619 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:16,620 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:16,621 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:16,622 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:16,623 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:16,623 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:16,623 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:16,623 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:16,624 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:16,624 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:16,624 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:16,624 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:16,624 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:16,624 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:16,626 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:16,637 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:16,637 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f541af430>
2025-03-21 20:14:16,637 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:16,637 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:16,637 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:16,637 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:16,637 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:16,637 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:16,637 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:16,638 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f541af430>
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:16,639 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f541af430>
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f541af430>
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f541af430>
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-03-21 20:14:16,640 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f541af430>
2025-03-21 20:14:16,641 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:16,643 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f541e1ae0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f542dd0c0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f542bdc30>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f541e1840>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f541e1570>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f541e07f0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f541e01f0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f542539d0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f542537c0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f541e2770>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f541e2890>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f54133640>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f541e3070>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f541e3190>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f541e33d0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f541e3550>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f541e3a30>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f541e3b50>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f541e3fa0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f541a4130>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f542dc6d0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f541a4610>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f541a4760>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f541a4910>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f541a4a30>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f541a4b20>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f541a4c40>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f541a4d60>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f541e1c60>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f541a5690>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f542bf220>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f542bd900>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f542526e0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f541e0e20>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f541e0220>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f541e25f0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f541e2ad0>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f54146800>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f541e2d70>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f541e2ef0>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f541e36d0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f541e3850>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f541e3df0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f541a42b0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f541a4430>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f541e1ff0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f541e3d00>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f541e1f00>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f541a5030>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f541e10f0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f542dc040>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f542dc640>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f542dce20>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f541e0400>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f541e21a0>, 0)]})
2025-03-21 20:14:16,643 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f541a7e20>
2025-03-21 20:14:16,959 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1080)
           2	LOAD_GLOBAL(arg=0, lineno=1094)
           4	LOAD_FAST(arg=0, lineno=1094)
           6	CALL_FUNCTION(arg=1, lineno=1094)
           8	LOAD_FAST(arg=1, lineno=1094)
          10	LOAD_CONST(arg=1, lineno=1094)
          12	LOAD_CONST(arg=1, lineno=1094)
          14	BUILD_SLICE(arg=2, lineno=1094)
          16	STORE_SUBSCR(arg=None, lineno=1094)
          18	LOAD_CONST(arg=1, lineno=1094)
          20	RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1080)
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1094)
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1094)
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1094)
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1094)
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:16,960 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1094)
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1094)
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:16,961 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:16,962 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:16,962 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:16,967 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:16,967 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54228d30>
2025-03-21 20:14:16,967 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:16,967 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:16,967 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>)
2025-03-21 20:14:16,967 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,967 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:16,968 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:16,968 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:16,968 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:16,968 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:16,968 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:16,968 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:16,968 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:16,968 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f5422a410>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f5422a950>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f5422ab90>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5422b7f0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f5422bac0>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5422a320>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f54229ff0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5422bee0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5422a200>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5422a8c0>, 0)]})
2025-03-21 20:14:16,968 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54228d30>
2025-03-21 20:14:16,987 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:16,987 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:16,987 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:16,987 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:16,987 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:16,987 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,987 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:16,987 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,987 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:16,988 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:16,989 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:16,990 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:16,991 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:16,992 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:16,993 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:16,994 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:16,994 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:16,994 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:16,994 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:16,995 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:16,995 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:16,995 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:16,995 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:16,995 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:16,995 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:16,997 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:17,008 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:17,008 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54132c50>
2025-03-21 20:14:17,008 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:17,008 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:17,008 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:17,008 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:17,008 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:17,008 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:17,009 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54132c50>
2025-03-21 20:14:17,010 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54132c50>
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54132c50>
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54132c50>
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:17,011 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54132c50>
2025-03-21 20:14:17,012 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:17,014 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f543d1060>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f543d3e20>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f543a9c00>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f543d1240>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f543d1270>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f543d2ef0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f543d2d40>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f54205360>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f542058a0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f543d2b00>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f543d2200>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f54207580>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f543d29e0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f543d0b50>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f543d1ea0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f543d3c70>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f54381600>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f54381d50>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f543832e0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f543835b0>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f543d3b20>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f5434c940>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f5434df30>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f5434ef50>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f5434d8d0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f5434f610>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f5434d2a0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f5434fe80>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f543d0a60>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f5434d5d0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f54386830>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5419cb80>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f54146140>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f543d1a20>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f543d2dd0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f543d0130>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f543d2440>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f54229c00>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f543d2710>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f543d2830>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f54380160>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f54380c40>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f54381e40>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f54383d30>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f54381de0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f54382020>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f543d2650>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f543d0c10>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f5434f670>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f543d1b40>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f543d3070>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f543d3df0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f543d3e50>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f543d2c80>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f543d0760>, 0)]})
2025-03-21 20:14:17,014 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54132c50>
2025-03-21 20:14:17,235 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1080)
           2	LOAD_GLOBAL(arg=0, lineno=1094)
           4	LOAD_FAST(arg=0, lineno=1094)
           6	CALL_FUNCTION(arg=1, lineno=1094)
           8	LOAD_FAST(arg=1, lineno=1094)
          10	LOAD_CONST(arg=1, lineno=1094)
          12	LOAD_CONST(arg=1, lineno=1094)
          14	BUILD_SLICE(arg=2, lineno=1094)
          16	STORE_SUBSCR(arg=None, lineno=1094)
          18	LOAD_CONST(arg=1, lineno=1094)
          20	RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:17,235 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:17,235 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:17,235 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:17,235 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1080)
2025-03-21 20:14:17,235 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,235 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1094)
2025-03-21 20:14:17,235 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,235 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1094)
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1094)
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1094)
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1094)
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1094)
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:17,236 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:17,237 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:17,237 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:17,237 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:17,237 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:17,237 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:17,237 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:17,237 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:17,237 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:17,238 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:17,242 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54150fd0>
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:17,243 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:17,244 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f5450b670>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f5450b7c0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f5450ab90>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5450a470>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f5450aa40>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5450b040>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f5450b160>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5450b970>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f54509db0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f54509b10>, 0)]})
2025-03-21 20:14:17,244 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54150fd0>
2025-03-21 20:14:17,263 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:17,263 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:17,263 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:17,263 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:17,263 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:17,263 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:17,264 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:17,265 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:17,266 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:17,267 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:17,268 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:17,269 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:17,270 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:17,270 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,270 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,270 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,270 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,271 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:17,271 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:17,271 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:17,271 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:17,271 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:17,271 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:17,272 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:17,274 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:17,285 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4133a0>
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:17,286 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:17,287 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4133a0>
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4133a0>
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:17,288 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4133a0>
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4133a0>
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:17,289 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-03-21 20:14:17,290 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:17,290 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:17,290 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:17,290 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:17,290 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:17,290 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4133a0>
2025-03-21 20:14:17,290 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:17,292 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f5e366260>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f5e05dea0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f54545480>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f5e3668c0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f5e367f70>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f5e05e170>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f5e05df00>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f54535e40>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f54536020>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f5df64f40>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f5df66dd0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f54778cd0>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f5e4109d0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f5e412aa0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f54784790>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f547862c0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f54508c70>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f54509180>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f545092d0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f54509060>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f5e05cd00>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f5450b310>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f5450bca0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f54508a00>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f5450a980>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f5450ac50>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f54509810>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f54508af0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f5df7b700>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f547c6dd0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f54544f40>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f54534a00>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f54534340>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f5e05c760>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f5df66ef0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f5df66c80>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f5e4103a0>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f54784f40>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f5e4105b0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f5e4123b0>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f54509e70>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f5450a050>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f545090c0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f545095a0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f54509480>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f5e367250>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f5450aa70>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f5e0d3a90>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f54508c40>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f5e05e2c0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f5477b9a0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f5e05d960>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f5e05f400>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f5e05e0b0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f5e0d06d0>, 0)]})
2025-03-21 20:14:17,292 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5466cb50>
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1080)
           2	LOAD_GLOBAL(arg=0, lineno=1094)
           4	LOAD_FAST(arg=0, lineno=1094)
           6	CALL_FUNCTION(arg=1, lineno=1094)
           8	LOAD_FAST(arg=1, lineno=1094)
          10	LOAD_CONST(arg=1, lineno=1094)
          12	LOAD_CONST(arg=1, lineno=1094)
          14	BUILD_SLICE(arg=2, lineno=1094)
          16	STORE_SUBSCR(arg=None, lineno=1094)
          18	LOAD_CONST(arg=1, lineno=1094)
          20	RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1080)
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1094)
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1094)
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:17,518 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1094)
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1094)
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1094)
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1094)
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:17,519 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:17,520 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:17,520 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:17,520 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:17,520 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:17,520 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:17,520 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:17,520 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:17,520 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:17,525 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:17,525 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4fe920>
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:17,526 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:17,527 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f5e1a62c0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f5e1a6b90>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f5e1a4280>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5e4fcf10>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f5e35d570>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5e1a6710>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f5e1a43d0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5e1a43a0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5e4fe7d0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5e4fee90>, 0)]})
2025-03-21 20:14:17,527 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54151ed0>
2025-03-21 20:14:17,546 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:17,546 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:17,546 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:17,546 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:17,546 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:17,546 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,546 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:17,547 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:17,548 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:17,549 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:17,550 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:17,551 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:17,552 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:17,553 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,553 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,553 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,553 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,554 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:17,554 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:17,554 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:17,554 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:17,554 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:17,554 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:17,554 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:17,556 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:17,567 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:17,567 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4de7d0>
2025-03-21 20:14:17,567 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:17,567 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:17,567 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,568 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:17,569 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4de7d0>
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4de7d0>
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4de7d0>
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4de7d0>
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:17,570 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:17,571 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:17,572 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:17,572 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:17,572 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5e4de7d0>
2025-03-21 20:14:17,572 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:17,573 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f5e275510>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f5e276440>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f5e2e1bd0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f5e276ef0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f5e274220>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f5e276140>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f5e274370>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f5e2b4280>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f5e2b7e80>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f5e275150>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f5e276920>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f5e2b6ad0>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f5e16a3b0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f5e1682e0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f5e16a200>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f5e169b10>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f5e1687c0>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f5e168d00>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f5e16a800>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f5e16a920>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f5e2776d0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f5e169630>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f5e169480>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f5e16a140>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f5e16af20>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f5e16b640>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f5e16b3a0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f5e16ada0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f5e2763e0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f5e16b6a0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5e2e0e50>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5e2e18a0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f5e2b4eb0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f5e2742b0>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f5e276cb0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f5e275180>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f5e275f60>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f5e1a5fc0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f5e3159c0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f5e317460>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f5e1680d0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f5e168880>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f5e16a620>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f5e16a2f0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f5e169900>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f5e275810>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f5e16b550>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f5e276ce0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f5e16ab60>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f5e276470>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f5e276380>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f5e277a00>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f5e275d50>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f5e276950>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f5e277790>, 0)]})
2025-03-21 20:14:17,574 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5e14be20>
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1080)
           2	LOAD_GLOBAL(arg=0, lineno=1094)
           4	LOAD_FAST(arg=0, lineno=1094)
           6	CALL_FUNCTION(arg=1, lineno=1094)
           8	LOAD_FAST(arg=1, lineno=1094)
          10	LOAD_CONST(arg=1, lineno=1094)
          12	LOAD_CONST(arg=1, lineno=1094)
          14	BUILD_SLICE(arg=2, lineno=1094)
          16	STORE_SUBSCR(arg=None, lineno=1094)
          18	LOAD_CONST(arg=1, lineno=1094)
          20	RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1080)
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1094)
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1094)
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1094)
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1094)
2025-03-21 20:14:17,795 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1094)
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1094)
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1094)
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1094)
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:17,796 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:17,797 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:17,797 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:17,797 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:17,797 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:17,797 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:17,797 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:17,802 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:17,802 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5de090c0>
2025-03-21 20:14:17,802 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:17,802 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x727f5e0dea40>)
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1080)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1094), Var($const12.5, utils.py:1094)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:17,803 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:17,804 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f5ded7370>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f5ded70d0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f5ded6dd0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5ded7f70>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f5ded7970>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5ded7c40>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f5ded7550>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5ded6f20>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5e1a5390>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5e1a6920>, 0)]})
2025-03-21 20:14:17,804 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5ddac6a0>
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:17,822 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,823 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:17,824 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:17,825 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:17,826 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:17,827 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:17,828 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:17,828 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:17,828 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:17,828 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:17,828 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:17,828 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:17,828 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:17,828 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,829 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,829 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,829 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:17,829 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:17,829 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:17,830 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:17,830 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:17,830 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:17,830 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:17,830 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:17,832 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:17,843 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:17,843 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547de050>
2025-03-21 20:14:17,843 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:17,843 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:17,843 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:17,843 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:17,843 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:17,843 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:17,844 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547de050>
2025-03-21 20:14:17,845 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547de050>
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547de050>
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547de050>
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:17,846 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - on stmt: jump 91
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:17,847 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f547de050>
2025-03-21 20:14:17,848 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:17,849 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f547f8640>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f542397b0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x727f5de787c0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f547f88e0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f547f8a60>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x727f54239960>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x727f54239570>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x727f5de7bc70>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x727f5de7be50>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f547f9600>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f547f9720>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x727f5423b100>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f547f9f00>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f547fa020>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f547fa260>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f547fa3e0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f547fa8c0>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f547fa9e0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f547fae30>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f547faf80>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f54239360>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f547fb460>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f547fb5b0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f547fb760>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f547fb880>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f547fb970>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f547fba90>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f547fbbb0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f547f84c0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f547f0520>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5409e0e0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5de789a0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x727f5de7a770>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f547f9060>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f547f9300>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f547f9480>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f547f9960>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f5ded6bf0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f547f9c00>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f547f9d80>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f547fa560>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f547fa6e0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f547fac80>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f547fb100>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f547fb280>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f547f8040>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f547fab00>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f547f8220>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f547fbe80>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f547f8ee0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f54238ee0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f54239720>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f542380a0>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f5423be50>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f5de7bdc0>, 0)]})
2025-03-21 20:14:17,849 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f547f3610>
2025-03-21 20:14:18,415 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2472)
           2	LOAD_FAST(arg=0, lineno=2477)
           4	LOAD_ATTR(arg=0, lineno=2477)
           6	LOAD_CONST(arg=1, lineno=2477)
           8	BINARY_POWER(arg=None, lineno=2477)
          10	LOAD_FAST(arg=0, lineno=2477)
          12	LOAD_ATTR(arg=1, lineno=2477)
          14	LOAD_CONST(arg=1, lineno=2477)
          16	BINARY_POWER(arg=None, lineno=2477)
          18	BINARY_ADD(arg=None, lineno=2477)
          20	RETURN_VALUE(arg=None, lineno=2477)
2025-03-21 20:14:18,415 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:18,415 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,415 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2472)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2477)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2477)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2477)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=BINARY_POWER(arg=None, lineno=2477)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1', '$const6.2']
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2477)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3']
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=2477)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$x10.4']
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=2477)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$12load_attr.5']
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=BINARY_POWER(arg=None, lineno=2477)
2025-03-21 20:14:18,416 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$12load_attr.5', '$const14.6']
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=BINARY_ADD(arg=None, lineno=2477)
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$16binary_power.7']
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=2477)
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - stack ['$18binary_add.8']
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:18,417 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8binary_power.3'}), (10, {'res': '$x10.4'}), (12, {'item': '$x10.4', 'res': '$12load_attr.5'}), (14, {'res': '$const14.6'}), (16, {'lhs': '$12load_attr.5', 'rhs': '$const14.6', 'res': '$16binary_power.7'}), (18, {'lhs': '$8binary_power.3', 'rhs': '$16binary_power.7', 'res': '$18binary_add.8'}), (20, {'retval': '$18binary_add.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,418 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $const6.2 = const(int, 2)                ['$const6.2']
    $8binary_power.3 = $4load_attr.1 ** $const6.2 ['$4load_attr.1', '$8binary_power.3', '$const6.2']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $const14.6 = const(int, 2)               ['$const14.6']
    $16binary_power.7 = $12load_attr.5 ** $const14.6 ['$12load_attr.5', '$16binary_power.7', '$const14.6']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:18,422 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:18,422 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54487f40>
2025-03-21 20:14:18,422 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:18,422 - numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=x, attr=real)
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 2)
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - on stmt: $8binary_power.3 = $4load_attr.1 ** $const6.2
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - on stmt: $12load_attr.5 = getattr(value=x, attr=imag)
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - on stmt: $const14.6 = const(int, 2)
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - on stmt: $16binary_power.7 = $12load_attr.5 ** $const14.6
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - on stmt: $18binary_add.8 = $8binary_power.3 + $16binary_power.7
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$18binary_add.8)
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12load_attr.5': [(<numba.core.ir.Assign object at 0x727f54487070>,
                                 0)],
             '$16binary_power.7': [(<numba.core.ir.Assign object at 0x727f544873a0>,
                                    0)],
             '$18binary_add.8': [(<numba.core.ir.Assign object at 0x727f54487520>,
                                  0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f54487670>,
                                    0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x727f54486ad0>,
                                0)],
             '$8binary_power.3': [(<numba.core.ir.Assign object at 0x727f54486e00>,
                                   0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x727f544871f0>,
                             0)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x727f54486c50>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x727f54485f90>, 0)]})
2025-03-21 20:14:18,423 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54487f40>
2025-03-21 20:14:18,436 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=50, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=49, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=39, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=35, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
>         96	JUMP_FORWARD(arg=4, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=66, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=90, lineno=237)
>        138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=78, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	LOAD_FAST(arg=4, lineno=237)
         172	LOAD_CONST(arg=2, lineno=237)
         174	COMPARE_OP(arg=3, lineno=237)
         176	POP_JUMP_IF_TRUE(arg=70, lineno=237)
>        178	LOAD_FAST(arg=3, lineno=243)
         180	POP_JUMP_IF_FALSE(arg=96, lineno=243)
         182	LOAD_CONST(arg=8, lineno=243)
         184	LOAD_FAST(arg=2, lineno=243)
         186	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         188	RETURN_VALUE(arg=None, lineno=243)
>        190	LOAD_FAST(arg=2, lineno=243)
         192	RETURN_VALUE(arg=None, lineno=243)
2025-03-21 20:14:18,436 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:18,436 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,436 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:18,436 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2025-03-21 20:14:18,436 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - stack ['$2load_deref.0']
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - stack ['$2load_deref.0', '$const4.1']
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - stack ['$10load_deref.3']
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - stack ['$10load_deref.3', '$a12.4']
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - stack ['$14call_function.5']
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,437 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - stack ['$b18.6']
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - stack ['$b18.6', '$const20.7']
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=50, lineno=218)
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - stack ['$22compare_op.8']
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=26 nstack_initial=0)
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - stack ['$const26.0']
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - stack ['$b30.1']
2025-03-21 20:14:18,438 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - stack ['$32unary_negative.2']
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - stack ['$exp36.3']
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - stack ['$exp36.3', '$const38.4']
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=221)
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - stack ['$40compare_op.5']
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - stack ['$const98.0']
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,439 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - stack ['$b102.1']
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - stack ['$44load_global.0']
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=49, lineno=223)
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - stack ['$48load_deref.0']
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,440 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - stack ['$exp106.0']
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - stack ['$exp106.0', '$const108.1']
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=66, lineno=234)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - stack ['$110compare_op.2']
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - stack ['$a52.0']
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - stack ['$a52.0', '$const54.1']
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=39, lineno=224)
2025-03-21 20:14:18,441 - numba.core.byteflow - DEBUG - stack ['$56compare_op.2']
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=JUMP_FORWARD(arg=4, lineno=230)
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - stack ['$114load_global.0']
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - stack ['$116load_method.1']
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2']
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
2025-03-21 20:14:18,442 - numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - stack ['$126call_method.6']
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=130 nstack_initial=0)
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - stack ['$exp130.0']
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - stack ['$exp130.0', '$const132.1']
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=90, lineno=237)
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - stack ['$134compare_op.2']
2025-03-21 20:14:18,443 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=0)
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=35, lineno=225)
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - stack ['$60load_deref.0']
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=76 nstack_initial=0)
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - stack ['$a76.0']
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - stack ['$a76.0', '$const78.1']
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-03-21 20:14:18,444 - numba.core.byteflow - DEBUG - stack ['$80compare_op.2']
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=138 nstack_initial=0)
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - stack ['$exp138.0']
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - stack ['$exp138.0', '$const140.1']
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=78, lineno=238)
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - stack ['$142binary_and.2']
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=0)
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=3, lineno=243)
2025-03-21 20:14:18,445 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - dispatch pc=180, inst=POP_JUMP_IF_FALSE(arg=96, lineno=243)
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - stack ['$invert178.0']
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=182, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=0)
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - stack ['$64load_deref.0']
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - stack ['$68load_global.0']
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
2025-03-21 20:14:18,446 - numba.core.byteflow - DEBUG - stack ['$68load_global.0', '$const70.1']
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - stack ['$72call_function.2']
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - stack ['$a84.0']
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - stack ['$a84.0', '$const86.1']
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - stack ['$88compare_op.2']
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,447 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - stack ['$r146.0']
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - stack ['$r146.0', '$a148.1']
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - stack ['$150inplace_multiply.2']
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=154 nstack_initial=0)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - stack ['$exp154.0']
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - stack ['$exp154.0', '$const156.1']
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
2025-03-21 20:14:18,448 - numba.core.byteflow - DEBUG - stack ['$158inplace_rshift.2']
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - stack ['$a162.3']
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - stack ['$a162.3', '$a164.4']
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - stack ['$166inplace_multiply.5']
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=4, lineno=237)
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=237)
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - stack ['$exp170.6']
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - dispatch pc=174, inst=COMPARE_OP(arg=3, lineno=237)
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - stack ['$exp170.6', '$const172.7']
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - dispatch pc=176, inst=POP_JUMP_IF_TRUE(arg=70, lineno=237)
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - stack ['$174compare_op.8']
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,449 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - dispatch pc=182, inst=LOAD_CONST(arg=8, lineno=243)
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - stack ['$const182.0']
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - dispatch pc=186, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - stack ['$const182.0', '$r184.1']
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=243)
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - stack ['$186binary_true_divide.2']
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=243)
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - dispatch pc=192, inst=RETURN_VALUE(arg=None, lineno=243)
2025-03-21 20:14:18,450 - numba.core.byteflow - DEBUG - stack ['$r190.0']
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=0)
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - stack ['$const92.0']
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:18,451 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-03-21 20:14:18,452 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:18,452 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,452 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,452 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:18,452 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:18,452 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:18,452 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
2025-03-21 20:14:18,452 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 96: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 96: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 96: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 178: ()})
2025-03-21 20:14:18,453 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
2025-03-21 20:14:18,454 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2025-03-21 20:14:18,454 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {'res': '$exp170.6'}), (172, {'res': '$const172.7'}), (174, {'lhs': '$exp170.6', 'rhs': '$const172.7', 'res': '$174compare_op.8'}), (176, {'pred': '$174compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 138: ()})
2025-03-21 20:14:18,454 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$invert178.0'}), (180, {'pred': '$invert178.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={182: (), 190: ()})
2025-03-21 20:14:18,454 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'res': '$r184.1'}), (186, {'lhs': '$const182.0', 'rhs': '$r184.1', 'res': '$186binary_true_divide.2'}), (188, {'retval': '$186binary_true_divide.2', 'castval': '$188return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,454 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$r190.0'}), (192, {'retval': '$r190.0', 'castval': '$192return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,457 - numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 96:
    jump 106                                 []
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7 = const(int, 0)              ['$const172.7']
    $174compare_op.8 = exp != $const172.7    ['$174compare_op.8', '$const172.7', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
label 182:
    $const182.0 = const(float, 1.0)          ['$const182.0']
    $186binary_true_divide.2 = $const182.0 / r ['$186binary_true_divide.2', '$const182.0', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']

2025-03-21 20:14:18,471 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:18,471 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,471 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,471 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 26
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,472 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 44
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 48
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 96
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
2025-03-21 20:14:18,473 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 106
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 114
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,474 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 130
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 138
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 146
2025-03-21 20:14:18,475 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: r = $150inplace_multiply.2
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 154
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 178
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,476 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 182
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 190
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f544ac4f0>
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
2025-03-21 20:14:18,477 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,479 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [(<numba.core.ir.Assign object at 0x727f544d1240>,
                                  0)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x727f544def50>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x727f544df1f0>,
                           106)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x727f544dd930>,
                                    114)],
             '$116load_method.1': [(<numba.core.ir.Assign object at 0x727f544dce80>,
                                    114)],
             '$120load_global.3': [(<numba.core.ir.Assign object at 0x727f544aef50>,
                                    114)],
             '$124call_function.5': [(<numba.core.ir.Assign object at 0x727f544aff40>,
                                      114)],
             '$126call_method.6': [(<numba.core.ir.Assign object at 0x727f544afee0>,
                                    114)],
             '$128return_value.7': [(<numba.core.ir.Assign object at 0x727f544acfd0>,
                                     114)],
             '$134compare_op.2': [(<numba.core.ir.Assign object at 0x727f544af700>,
                                   130)],
             '$136pred': [(<numba.core.ir.Assign object at 0x727f544af250>,
                           130)],
             '$142binary_and.2': [(<numba.core.ir.Assign object at 0x727f544af460>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x727f544ae830>,
                           138)],
             '$150inplace_multiply.2': [(<numba.core.ir.Assign object at 0x727f544ae590>,
                                         146)],
             '$158inplace_rshift.2': [(<numba.core.ir.Assign object at 0x727f544ae440>,
                                       154)],
             '$166inplace_multiply.5': [(<numba.core.ir.Assign object at 0x727f544adb40>,
                                         154)],
             '$174compare_op.8': [(<numba.core.ir.Assign object at 0x727f544ad6f0>,
                                   154)],
             '$176pred': [(<numba.core.ir.Assign object at 0x727f544ad480>,
                           154)],
             '$180pred': [(<numba.core.ir.Assign object at 0x727f544ad870>,
                           178)],
             '$186binary_true_divide.2': [(<numba.core.ir.Assign object at 0x727f544ac910>,
                                           182)],
             '$188return_value.3': [(<numba.core.ir.Assign object at 0x727f544aca60>,
                                     182)],
             '$192return_value.1': [(<numba.core.ir.Assign object at 0x727f544acb50>,
                                     190)],
             '$22compare_op.8': [(<numba.core.ir.Assign object at 0x727f544d0730>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x727f544d2fb0>, 0)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x727f544d1750>,
                                 0)],
             '$40compare_op.5': [(<numba.core.ir.Assign object at 0x727f544d2d40>,
                                  26)],
             '$42pred': [(<numba.core.ir.Assign object at 0x727f544d2500>, 26)],
             '$44load_global.0': [(<numba.core.ir.Assign object at 0x727f544d08b0>,
                                   44)],
             '$48load_deref.0': [(<numba.core.ir.Assign object at 0x727f544dff40>,
                                  48)],
             '$50pred': [(<numba.core.ir.Assign object at 0x727f544df8b0>, 48)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x727f544de050>,
                              106)],
             '$const132.1': [(<numba.core.ir.Assign object at 0x727f544afa00>,
                              130)],
             '$const140.1': [(<numba.core.ir.Assign object at 0x727f544af9a0>,
                              138)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x727f544ae290>,
                              154)],
             '$const172.7': [(<numba.core.ir.Assign object at 0x727f544acf70>,
                              154)],
             '$const182.0': [(<numba.core.ir.Assign object at 0x727f544ac400>,
                              182)],
             '$const20.7': [(<numba.core.ir.Assign object at 0x727f544d0af0>,
                             0)],
             '$const38.4': [(<numba.core.ir.Assign object at 0x727f544d2e00>,
                             26)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f544d1600>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x727f544d1c00>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x727f544d0f10>, 0),
                     (<numba.core.ir.Assign object at 0x727f544ad900>, 154)],
             'b': [(<numba.core.ir.Assign object at 0x727f544d17b0>, 0)],
             'bool112': [(<numba.core.ir.Assign object at 0x727f544ddab0>,
                          106)],
             'bool136': [(<numba.core.ir.Assign object at 0x727f544af640>,
                          130)],
             'bool144': [(<numba.core.ir.Assign object at 0x727f544aec50>,
                          138)],
             'bool176': [(<numba.core.ir.Assign object at 0x727f544ad300>,
                          154)],
             'bool180': [(<numba.core.ir.Assign object at 0x727f544ad060>,
                          178)],
             'bool24': [(<numba.core.ir.Assign object at 0x727f544d0490>, 0)],
             'bool42': [(<numba.core.ir.Assign object at 0x727f544d2d70>, 26)],
             'bool50': [(<numba.core.ir.Assign object at 0x727f544dde10>, 48)],
             'exp': [(<numba.core.ir.Assign object at 0x727f544d1900>, 26),
                     (<numba.core.ir.Assign object at 0x727f544ddf00>, 98),
                     (<numba.core.ir.Assign object at 0x727f544ae050>, 154)],
             'invert': [(<numba.core.ir.Assign object at 0x727f544d07c0>, 26),
                        (<numba.core.ir.Assign object at 0x727f544df070>, 98)],
             'r': [(<numba.core.ir.Assign object at 0x727f544d13c0>, 0),
                   (<numba.core.ir.Assign object at 0x727f544aed40>, 146)]})
2025-03-21 20:14:18,479 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f544de860>
2025-03-21 20:14:18,479 - numba.core.ssa - DEBUG - Fix SSA violator on var r
2025-03-21 20:14:18,479 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,479 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,479 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - first assign: r
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,480 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,481 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,482 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,483 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: r = $150inplace_multiply.2
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - replaced with: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,484 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547dfb20>
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x727f544ac4f0>],
             146: [<numba.core.ir.Assign object at 0x727f544aded0>]})
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,485 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,486 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,487 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,488 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,489 - numba.core.ssa - DEBUG - find_def_from_top label 146
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - idom 138 from label 146
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_top label 138
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - idom 0 from label 106
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[130])
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - find_def_from_bottom label 146
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - incoming_def r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,490 - numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,491 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - find_def var='r' stmt=$186binary_true_divide.2 = $const182.0 / r
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - find_def_from_top label 182
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - idom 178 from label 182
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 178
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - idom 0 from label 106
2025-03-21 20:14:18,492 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - replaced with: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f547dfb20>
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - find_def var='r' stmt=$192return_value.1 = cast(value=r)
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - find_def_from_top label 190
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - idom 178 from label 190
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - replaced with: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - Fix SSA violator on var a.1
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,493 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - first assign: a.1
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,494 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,495 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,496 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,497 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - replaced with: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,498 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df520>
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x727f544acac0>],
             154: [<numba.core.ir.Assign object at 0x727f544ac2e0>]})
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,499 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,500 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,501 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - find_def_from_top label 114
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - idom 106 from label 114
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - idom 0 from label 106
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,502 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - find_def_from_top label 146
2025-03-21 20:14:18,503 - numba.core.ssa - DEBUG - idom 138 from label 146
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - find_def_from_top label 138
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - idom 0 from label 106
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - incoming_def a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,504 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - idom 138 from label 154
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,505 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d23b0>
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - Fix SSA violator on var invert
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,506 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - first assign: invert
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - replaced with: invert = const(bool, True)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,507 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - replaced with: invert.1 = const(bool, False)
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,508 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,509 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,510 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,511 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f544ac190>
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x727f544acca0>],
             98: [<numba.core.ir.Assign object at 0x727f544ace20>]})
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,512 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,513 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,514 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,515 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,516 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,517 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def var='invert' stmt=$180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - idom 130 from label 178
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_bottom label 96
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_top label 96
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - idom 48 from label 96
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_bottom label 48
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_top label 48
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - idom 26 from label 48
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - find_def_from_bottom label 26
2025-03-21 20:14:18,518 - numba.core.ssa - DEBUG - incoming_def invert = const(bool, True)
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - find_def_from_bottom label 98
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - incoming_def invert.1 = const(bool, False)
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - replaced with: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544d28f0>
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - Fix SSA violator on var exp
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,519 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - first assign: exp
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,520 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
2025-03-21 20:14:18,521 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - replaced with: exp.1 = b
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,522 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,523 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - replaced with: exp.2 = $158inplace_rshift.2
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,524 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f547df970>
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x727f544ad0c0>],
             98: [<numba.core.ir.Assign object at 0x727f544ad810>],
             154: [<numba.core.ir.Assign object at 0x727f5469e920>]})
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
2025-03-21 20:14:18,525 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,526 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: exp.1 = b
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,527 - numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - find_def_from_bottom label 96
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - find_def_from_top label 96
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - idom 48 from label 96
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - find_def_from_bottom label 48
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - find_def_from_top label 48
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - idom 26 from label 48
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - find_def_from_bottom label 26
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - find_def_from_bottom label 98
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - incoming_def exp.1 = b
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - replaced with: $110compare_op.2 = exp.3 > $const108.1
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,528 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,529 - numba.core.ssa - DEBUG - replaced with: $134compare_op.2 = exp.3 != $const132.1
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - find_def_from_top label 138
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[96, 98])
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-03-21 20:14:18,530 - numba.core.ssa - DEBUG - incoming_def exp.2 = $158inplace_rshift.2
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - replaced with: $142binary_and.2 = exp.4 & $const140.1
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - idom 138 from label 154
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,531 - numba.core.ssa - DEBUG - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - replaced with: $174compare_op.8 = exp.2 != $const172.7
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,532 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,533 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,533 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,533 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,533 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,533 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,533 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f544ac190>
2025-03-21 20:14:18,533 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,533 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,641 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2472)
           2	LOAD_FAST(arg=0, lineno=2477)
           4	LOAD_ATTR(arg=0, lineno=2477)
           6	LOAD_CONST(arg=1, lineno=2477)
           8	BINARY_POWER(arg=None, lineno=2477)
          10	LOAD_FAST(arg=0, lineno=2477)
          12	LOAD_ATTR(arg=1, lineno=2477)
          14	LOAD_CONST(arg=1, lineno=2477)
          16	BINARY_POWER(arg=None, lineno=2477)
          18	BINARY_ADD(arg=None, lineno=2477)
          20	RETURN_VALUE(arg=None, lineno=2477)
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2472)
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2477)
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2477)
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2477)
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=BINARY_POWER(arg=None, lineno=2477)
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1', '$const6.2']
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2477)
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3']
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=2477)
2025-03-21 20:14:18,642 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$x10.4']
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=2477)
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$12load_attr.5']
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=BINARY_POWER(arg=None, lineno=2477)
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$12load_attr.5', '$const14.6']
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=BINARY_ADD(arg=None, lineno=2477)
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$16binary_power.7']
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=2477)
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - stack ['$18binary_add.8']
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:18,643 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:18,644 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8binary_power.3'}), (10, {'res': '$x10.4'}), (12, {'item': '$x10.4', 'res': '$12load_attr.5'}), (14, {'res': '$const14.6'}), (16, {'lhs': '$12load_attr.5', 'rhs': '$const14.6', 'res': '$16binary_power.7'}), (18, {'lhs': '$8binary_power.3', 'rhs': '$16binary_power.7', 'res': '$18binary_add.8'}), (20, {'retval': '$18binary_add.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,644 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $const6.2 = const(int, 2)                ['$const6.2']
    $8binary_power.3 = $4load_attr.1 ** $const6.2 ['$4load_attr.1', '$8binary_power.3', '$const6.2']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $const14.6 = const(int, 2)               ['$const14.6']
    $16binary_power.7 = $12load_attr.5 ** $const14.6 ['$12load_attr.5', '$16binary_power.7', '$const14.6']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:18,648 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f54432cb0>
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=x, attr=real)
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 2)
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: $8binary_power.3 = $4load_attr.1 ** $const6.2
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: $12load_attr.5 = getattr(value=x, attr=imag)
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: $const14.6 = const(int, 2)
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: $16binary_power.7 = $12load_attr.5 ** $const14.6
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: $18binary_add.8 = $8binary_power.3 + $16binary_power.7
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$18binary_add.8)
2025-03-21 20:14:18,649 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:18,650 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12load_attr.5': [(<numba.core.ir.Assign object at 0x727f54432050>,
                                 0)],
             '$16binary_power.7': [(<numba.core.ir.Assign object at 0x727f54432950>,
                                    0)],
             '$18binary_add.8': [(<numba.core.ir.Assign object at 0x727f54433c40>,
                                  0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f54433850>,
                                    0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x727f54432fe0>,
                                0)],
             '$8binary_power.3': [(<numba.core.ir.Assign object at 0x727f54433a00>,
                                   0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x727f54432da0>,
                             0)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x727f54432e90>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x727f54432710>, 0)]})
2025-03-21 20:14:18,650 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54432cb0>
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=50, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=49, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=39, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=35, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
>         96	JUMP_FORWARD(arg=4, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=66, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=90, lineno=237)
>        138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=78, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	LOAD_FAST(arg=4, lineno=237)
         172	LOAD_CONST(arg=2, lineno=237)
         174	COMPARE_OP(arg=3, lineno=237)
         176	POP_JUMP_IF_TRUE(arg=70, lineno=237)
>        178	LOAD_FAST(arg=3, lineno=243)
         180	POP_JUMP_IF_FALSE(arg=96, lineno=243)
         182	LOAD_CONST(arg=8, lineno=243)
         184	LOAD_FAST(arg=2, lineno=243)
         186	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         188	RETURN_VALUE(arg=None, lineno=243)
>        190	LOAD_FAST(arg=2, lineno=243)
         192	RETURN_VALUE(arg=None, lineno=243)
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - stack ['$2load_deref.0']
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
2025-03-21 20:14:18,661 - numba.core.byteflow - DEBUG - stack ['$2load_deref.0', '$const4.1']
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - stack ['$10load_deref.3']
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - stack ['$10load_deref.3', '$a12.4']
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - stack ['$14call_function.5']
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - stack ['$b18.6']
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - stack ['$b18.6', '$const20.7']
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=50, lineno=218)
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - stack ['$22compare_op.8']
2025-03-21 20:14:18,662 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=26 nstack_initial=0)
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - stack ['$const26.0']
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - stack ['$b30.1']
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - stack ['$32unary_negative.2']
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - stack ['$exp36.3']
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - stack ['$exp36.3', '$const38.4']
2025-03-21 20:14:18,663 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=221)
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - stack ['$40compare_op.5']
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - stack ['$const98.0']
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - stack ['$b102.1']
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=0)
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
2025-03-21 20:14:18,664 - numba.core.byteflow - DEBUG - stack ['$44load_global.0']
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=49, lineno=223)
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - stack ['$48load_deref.0']
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=0)
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - stack ['$exp106.0']
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - stack ['$exp106.0', '$const108.1']
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=66, lineno=234)
2025-03-21 20:14:18,665 - numba.core.byteflow - DEBUG - stack ['$110compare_op.2']
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - stack ['$a52.0']
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - stack ['$a52.0', '$const54.1']
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=39, lineno=224)
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - stack ['$56compare_op.2']
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=JUMP_FORWARD(arg=4, lineno=230)
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,666 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - stack ['$114load_global.0']
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - stack ['$116load_method.1']
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2']
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - stack ['$126call_method.6']
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,667 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=130 nstack_initial=0)
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - stack ['$exp130.0']
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - stack ['$exp130.0', '$const132.1']
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=90, lineno=237)
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - stack ['$134compare_op.2']
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=0)
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=35, lineno=225)
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - stack ['$60load_deref.0']
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,668 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=76 nstack_initial=0)
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - stack ['$a76.0']
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - stack ['$a76.0', '$const78.1']
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - stack ['$80compare_op.2']
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=138 nstack_initial=0)
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
2025-03-21 20:14:18,669 - numba.core.byteflow - DEBUG - stack ['$exp138.0']
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - stack ['$exp138.0', '$const140.1']
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=78, lineno=238)
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - stack ['$142binary_and.2']
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=0)
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=3, lineno=243)
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - dispatch pc=180, inst=POP_JUMP_IF_FALSE(arg=96, lineno=243)
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - stack ['$invert178.0']
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=182, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=0)
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
2025-03-21 20:14:18,670 - numba.core.byteflow - DEBUG - stack ['$64load_deref.0']
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - stack ['$68load_global.0']
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - stack ['$68load_global.0', '$const70.1']
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - stack ['$72call_function.2']
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
2025-03-21 20:14:18,671 - numba.core.byteflow - DEBUG - stack ['$a84.0']
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - stack ['$a84.0', '$const86.1']
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - stack ['$88compare_op.2']
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - stack ['$r146.0']
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - stack ['$r146.0', '$a148.1']
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - stack ['$150inplace_multiply.2']
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,672 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=154 nstack_initial=0)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack ['$exp154.0']
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack ['$exp154.0', '$const156.1']
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack ['$158inplace_rshift.2']
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack ['$a162.3']
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack ['$a162.3', '$a164.4']
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack ['$166inplace_multiply.5']
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=4, lineno=237)
2025-03-21 20:14:18,673 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=237)
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - stack ['$exp170.6']
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - dispatch pc=174, inst=COMPARE_OP(arg=3, lineno=237)
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - stack ['$exp170.6', '$const172.7']
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - dispatch pc=176, inst=POP_JUMP_IF_TRUE(arg=70, lineno=237)
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - stack ['$174compare_op.8']
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=182 nstack_initial=0)
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - dispatch pc=182, inst=LOAD_CONST(arg=8, lineno=243)
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - stack ['$const182.0']
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - dispatch pc=186, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - stack ['$const182.0', '$r184.1']
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=243)
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - stack ['$186binary_true_divide.2']
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,674 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=243)
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - dispatch pc=192, inst=RETURN_VALUE(arg=None, lineno=243)
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - stack ['$r190.0']
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=0)
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - stack ['$const92.0']
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,675 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0)])
2025-03-21 20:14:18,676 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:18,676 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
2025-03-21 20:14:18,676 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:18,676 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,676 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,676 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 96: ()})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 96: ()})
2025-03-21 20:14:18,677 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 96: ()})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 178: ()})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {'res': '$exp170.6'}), (172, {'res': '$const172.7'}), (174, {'lhs': '$exp170.6', 'rhs': '$const172.7', 'res': '$174compare_op.8'}), (176, {'pred': '$174compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 138: ()})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$invert178.0'}), (180, {'pred': '$invert178.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={182: (), 190: ()})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'res': '$r184.1'}), (186, {'lhs': '$const182.0', 'rhs': '$r184.1', 'res': '$186binary_true_divide.2'}), (188, {'retval': '$186binary_true_divide.2', 'castval': '$188return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$r190.0'}), (192, {'retval': '$r190.0', 'castval': '$192return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,682 - numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 96:
    jump 106                                 []
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7 = const(int, 0)              ['$const172.7']
    $174compare_op.8 = exp != $const172.7    ['$174compare_op.8', '$const172.7', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
label 182:
    $const182.0 = const(float, 1.0)          ['$const182.0']
    $186binary_true_divide.2 = $const182.0 / r ['$186binary_true_divide.2', '$const182.0', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']

2025-03-21 20:14:18,695 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 26
2025-03-21 20:14:18,696 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 44
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 48
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 96
2025-03-21 20:14:18,697 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 106
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 114
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,698 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 130
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 138
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,699 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 146
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: r = $150inplace_multiply.2
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 154
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 178
2025-03-21 20:14:18,700 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 182
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 190
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f546c9270>
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
2025-03-21 20:14:18,701 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,703 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [(<numba.core.ir.Assign object at 0x727f546cb490>,
                                  0)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x727f53f13b20>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x727f53f13d90>,
                           106)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x727f53f13fd0>,
                                    114)],
             '$116load_method.1': [(<numba.core.ir.Assign object at 0x727f53f20190>,
                                    114)],
             '$120load_global.3': [(<numba.core.ir.Assign object at 0x727f53f20430>,
                                    114)],
             '$124call_function.5': [(<numba.core.ir.Assign object at 0x727f53f20730>,
                                      114)],
             '$126call_method.6': [(<numba.core.ir.Assign object at 0x727f53f208e0>,
                                    114)],
             '$128return_value.7': [(<numba.core.ir.Assign object at 0x727f53f209d0>,
                                     114)],
             '$134compare_op.2': [(<numba.core.ir.Assign object at 0x727f53f20e80>,
                                   130)],
             '$136pred': [(<numba.core.ir.Assign object at 0x727f53f210f0>,
                           130)],
             '$142binary_and.2': [(<numba.core.ir.Assign object at 0x727f53f21600>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x727f53f21870>,
                           138)],
             '$150inplace_multiply.2': [(<numba.core.ir.Assign object at 0x727f53f21d20>,
                                         146)],
             '$158inplace_rshift.2': [(<numba.core.ir.Assign object at 0x727f53f22260>,
                                       154)],
             '$166inplace_multiply.5': [(<numba.core.ir.Assign object at 0x727f53f226e0>,
                                         154)],
             '$174compare_op.8': [(<numba.core.ir.Assign object at 0x727f53f22bc0>,
                                   154)],
             '$176pred': [(<numba.core.ir.Assign object at 0x727f53f22e30>,
                           154)],
             '$180pred': [(<numba.core.ir.Assign object at 0x727f53f23190>,
                           178)],
             '$186binary_true_divide.2': [(<numba.core.ir.Assign object at 0x727f53f236a0>,
                                           182)],
             '$188return_value.3': [(<numba.core.ir.Assign object at 0x727f53f237f0>,
                                     182)],
             '$192return_value.1': [(<numba.core.ir.Assign object at 0x727f53f23b50>,
                                     190)],
             '$22compare_op.8': [(<numba.core.ir.Assign object at 0x727f54686d70>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x727f54686f80>, 0)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x727f546c9570>,
                                 0)],
             '$40compare_op.5': [(<numba.core.ir.Assign object at 0x727f54685a50>,
                                  26)],
             '$42pred': [(<numba.core.ir.Assign object at 0x727f54687340>, 26)],
             '$44load_global.0': [(<numba.core.ir.Assign object at 0x727f54686230>,
                                   44)],
             '$48load_deref.0': [(<numba.core.ir.Assign object at 0x727f53f101c0>,
                                  48)],
             '$50pred': [(<numba.core.ir.Assign object at 0x727f53f10610>, 48)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x727f53f13970>,
                              106)],
             '$const132.1': [(<numba.core.ir.Assign object at 0x727f53f20cd0>,
                              130)],
             '$const140.1': [(<numba.core.ir.Assign object at 0x727f53f21450>,
                              138)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x727f53f220b0>,
                              154)],
             '$const172.7': [(<numba.core.ir.Assign object at 0x727f53f22a10>,
                              154)],
             '$const182.0': [(<numba.core.ir.Assign object at 0x727f53f233d0>,
                              182)],
             '$const20.7': [(<numba.core.ir.Assign object at 0x727f546c8730>,
                             0)],
             '$const38.4': [(<numba.core.ir.Assign object at 0x727f54684340>,
                             26)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f546c9000>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x727f546cb6d0>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x727f546ca7a0>, 0),
                     (<numba.core.ir.Assign object at 0x727f53f227a0>, 154)],
             'b': [(<numba.core.ir.Assign object at 0x727f546cb700>, 0)],
             'bool112': [(<numba.core.ir.Assign object at 0x727f53f13c70>,
                          106)],
             'bool136': [(<numba.core.ir.Assign object at 0x727f53f20fd0>,
                          130)],
             'bool144': [(<numba.core.ir.Assign object at 0x727f53f21750>,
                          138)],
             'bool176': [(<numba.core.ir.Assign object at 0x727f53f22d10>,
                          154)],
             'bool180': [(<numba.core.ir.Assign object at 0x727f53f23070>,
                          178)],
             'bool24': [(<numba.core.ir.Assign object at 0x727f546872b0>, 0)],
             'bool42': [(<numba.core.ir.Assign object at 0x727f54686050>, 26)],
             'bool50': [(<numba.core.ir.Assign object at 0x727f53f104f0>, 48)],
             'exp': [(<numba.core.ir.Assign object at 0x727f54687220>, 26),
                     (<numba.core.ir.Assign object at 0x727f53f13700>, 98),
                     (<numba.core.ir.Assign object at 0x727f53f22320>, 154)],
             'invert': [(<numba.core.ir.Assign object at 0x727f54684820>, 26),
                        (<numba.core.ir.Assign object at 0x727f53f13430>, 98)],
             'r': [(<numba.core.ir.Assign object at 0x727f546c8b50>, 0),
                   (<numba.core.ir.Assign object at 0x727f53f21de0>, 146)]})
2025-03-21 20:14:18,703 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f546c9270>
2025-03-21 20:14:18,703 - numba.core.ssa - DEBUG - Fix SSA violator on var r
2025-03-21 20:14:18,703 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,703 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,703 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - first assign: r
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,704 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,705 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,706 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: r = $150inplace_multiply.2
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - replaced with: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,707 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,708 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9720>
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x727f546ca290>],
             146: [<numba.core.ir.Assign object at 0x727f546c8f70>]})
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,709 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,710 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,711 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,712 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - find_def_from_top label 146
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - idom 138 from label 146
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - find_def_from_top label 138
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,713 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - idom 0 from label 106
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[130])
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - find_def_from_bottom label 146
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - incoming_def r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,714 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
2025-03-21 20:14:18,715 - numba.core.ssa - DEBUG - find_def var='r' stmt=$186binary_true_divide.2 = $const182.0 / r
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - find_def_from_top label 182
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - idom 178 from label 182
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 178
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - idom 0 from label 106
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - replaced with: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,716 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9720>
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - find_def var='r' stmt=$192return_value.1 = cast(value=r)
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - find_def_from_top label 190
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - idom 178 from label 190
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - find_def_from_bottom label 178
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - replaced with: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - Fix SSA violator on var a.1
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-03-21 20:14:18,717 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - first assign: a.1
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,718 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,719 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,720 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
2025-03-21 20:14:18,721 - numba.core.ssa - DEBUG - replaced with: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f546c9300>
2025-03-21 20:14:18,722 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x727f546c8a30>],
             154: [<numba.core.ir.Assign object at 0x727f53f23a60>]})
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,723 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,724 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,725 - numba.core.ssa - DEBUG - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - find_def_from_top label 114
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - idom 106 from label 114
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - idom 0 from label 106
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,726 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - find_def_from_top label 146
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - idom 138 from label 146
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - find_def_from_top label 138
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - idom 0 from label 106
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - find_def_from_bottom label 0
2025-03-21 20:14:18,727 - numba.core.ssa - DEBUG - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - incoming_def a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - idom 138 from label 154
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,728 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,729 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f54431ab0>
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - Fix SSA violator on var invert
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,730 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - first assign: invert
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - replaced with: invert = const(bool, True)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,731 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - replaced with: invert.1 = const(bool, False)
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,732 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,733 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,734 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f53f23c40>
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x727f546cbca0>],
             98: [<numba.core.ir.Assign object at 0x727f546cbdf0>]})
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,735 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,736 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,737 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,738 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,739 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,740 - numba.core.ssa - DEBUG - find_def var='invert' stmt=$180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,741 - numba.core.ssa - DEBUG - find_def_from_top label 178
2025-03-21 20:14:18,741 - numba.core.ssa - DEBUG - idom 130 from label 178
2025-03-21 20:14:18,741 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,741 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,741 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,741 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,741 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,741 - numba.core.ssa - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-03-21 20:14:18,742 - numba.core.ssa - DEBUG - find_def_from_bottom label 96
2025-03-21 20:14:18,742 - numba.core.ssa - DEBUG - find_def_from_top label 96
2025-03-21 20:14:18,742 - numba.core.ssa - DEBUG - idom 48 from label 96
2025-03-21 20:14:18,742 - numba.core.ssa - DEBUG - find_def_from_bottom label 48
2025-03-21 20:14:18,742 - numba.core.ssa - DEBUG - find_def_from_top label 48
2025-03-21 20:14:18,742 - numba.core.ssa - DEBUG - idom 26 from label 48
2025-03-21 20:14:18,742 - numba.core.ssa - DEBUG - find_def_from_bottom label 26
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - incoming_def invert = const(bool, True)
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - find_def_from_bottom label 98
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - incoming_def invert.1 = const(bool, False)
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - replaced with: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - Fix SSA violator on var exp
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,743 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - first assign: exp
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,744 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,745 - numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: exp = b
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - replaced with: exp.1 = b
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,746 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,747 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - replaced with: exp.2 = $158inplace_rshift.2
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,748 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x727f54431ab0>
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x727f546c9c00>],
             98: [<numba.core.ir.Assign object at 0x727f546c8dc0>],
             154: [<numba.core.ir.Assign object at 0x727f53f2d000>]})
2025-03-21 20:14:18,749 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,750 - numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: jump 96
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,751 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - on stmt: exp.1 = b
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - on stmt: jump 106
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - find_def_from_top label 106
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - find_def_from_bottom label 96
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - find_def_from_top label 96
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - idom 48 from label 96
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - find_def_from_bottom label 48
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - find_def_from_top label 48
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - idom 26 from label 48
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - find_def_from_bottom label 26
2025-03-21 20:14:18,752 - numba.core.ssa - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - find_def_from_bottom label 98
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - incoming_def exp.1 = b
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - replaced with: $110compare_op.2 = exp.3 > $const108.1
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - on stmt: return $128return_value.7
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
2025-03-21 20:14:18,753 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - replaced with: $134compare_op.2 = exp.3 != $const132.1
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - find_def_from_top label 138
2025-03-21 20:14:18,754 - numba.core.ssa - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 138
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - find_def_from_bottom label 130
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - find_def_from_top label 130
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - idom 106 from label 130
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - find_def_from_bottom label 106
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[96, 98])
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - find_def_from_bottom label 154
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - incoming_def exp.2 = $158inplace_rshift.2
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - replaced with: $142binary_and.2 = exp.4 & $const140.1
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - on stmt: jump 154
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,755 - numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - find_def_from_top label 154
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - idom 138 from label 154
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - find_def_from_bottom label 138
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - find_def var='exp' stmt=$174compare_op.8 = exp != $const172.7
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - replaced with: $174compare_op.8 = exp.2 != $const172.7
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,756 - numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: return $188return_value.3
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x727f546c9300>
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
2025-03-21 20:14:18,757 - numba.core.ssa - DEBUG - on stmt: return $192return_value.1
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2524)
           2	LOAD_GLOBAL(arg=0, lineno=2528)
           4	LOAD_METHOD(arg=1, lineno=2528)
           6	LOAD_FAST(arg=0, lineno=2528)
           8	CALL_METHOD(arg=1, lineno=2528)
          10	LOAD_CONST(arg=1, lineno=2528)
          12	LOAD_GLOBAL(arg=0, lineno=2528)
          14	LOAD_METHOD(arg=2, lineno=2528)
          16	LOAD_FAST(arg=0, lineno=2528)
          18	CALL_METHOD(arg=1, lineno=2528)
          20	BINARY_MULTIPLY(arg=None, lineno=2528)
          22	BINARY_ADD(arg=None, lineno=2528)
          24	RETURN_VALUE(arg=None, lineno=2528)
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2524)
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2528)
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=2528)
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2528)
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - stack ['$4load_method.1']
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=2528)
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$x6.2']
2025-03-21 20:14:18,868 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=2528)
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - stack ['$8call_method.3']
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=2528)
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4']
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_METHOD(arg=2, lineno=2528)
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$12load_global.5']
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=2528)
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$14load_method.6']
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=CALL_METHOD(arg=1, lineno=2528)
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$14load_method.6', '$x16.7']
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_MULTIPLY(arg=None, lineno=2528)
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$18call_method.8']
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_ADD(arg=None, lineno=2528)
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$20binary_multiply.9']
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=2528)
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - stack ['$22binary_add.10']
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:18,869 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:18,870 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:18,870 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,870 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,870 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:18,870 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:18,870 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:18,870 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$x6.2'}), (8, {'func': '$4load_method.1', 'args': ['$x6.2'], 'res': '$8call_method.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$12load_global.5'}), (14, {'item': '$12load_global.5', 'res': '$14load_method.6'}), (16, {'res': '$x16.7'}), (18, {'func': '$14load_method.6', 'args': ['$x16.7'], 'res': '$18call_method.8'}), (20, {'lhs': '$const10.4', 'rhs': '$18call_method.8', 'res': '$20binary_multiply.9'}), (22, {'lhs': '$8call_method.3', 'rhs': '$20binary_multiply.9', 'res': '$22binary_add.10'}), (24, {'retval': '$22binary_add.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,871 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $2load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2524)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $const10.4 = const(complex, 1j)          ['$const10.4']
    $12load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2524)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $20binary_multiply.9 = $const10.4 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    return $24return_value.11                ['$24return_value.11']

2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53f86b00>
2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=cos)
2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - on stmt: $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2524)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(complex, 1j)
2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - on stmt: $14load_method.6 = getattr(value=$12load_global.5, attr=sin)
2025-03-21 20:14:18,876 - numba.core.ssa - DEBUG - on stmt: $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2524)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,877 - numba.core.ssa - DEBUG - on stmt: $20binary_multiply.9 = $const10.4 * $18call_method.8
2025-03-21 20:14:18,877 - numba.core.ssa - DEBUG - on stmt: $22binary_add.10 = $8call_method.3 + $20binary_multiply.9
2025-03-21 20:14:18,877 - numba.core.ssa - DEBUG - on stmt: $24return_value.11 = cast(value=$22binary_add.10)
2025-03-21 20:14:18,877 - numba.core.ssa - DEBUG - on stmt: return $24return_value.11
2025-03-21 20:14:18,877 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12load_global.5': [(<numba.core.ir.Assign object at 0x727f53f855a0>,
                                   0)],
             '$14load_method.6': [(<numba.core.ir.Assign object at 0x727f53f85720>,
                                   0)],
             '$18call_method.8': [(<numba.core.ir.Assign object at 0x727f53f85a50>,
                                   0)],
             '$20binary_multiply.9': [(<numba.core.ir.Assign object at 0x727f53f85b70>,
                                       0)],
             '$22binary_add.10': [(<numba.core.ir.Assign object at 0x727f53f85cf0>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x727f53f4fc70>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f53f84e80>,
                                  0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x727f53f85000>,
                                  0)],
             '$8call_method.3': [(<numba.core.ir.Assign object at 0x727f53f85330>,
                                  0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f53f85420>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f53f84670>, 0)]})
2025-03-21 20:14:18,877 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f53f86b00>
2025-03-21 20:14:18,940 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2524)
           2	LOAD_GLOBAL(arg=0, lineno=2528)
           4	LOAD_METHOD(arg=1, lineno=2528)
           6	LOAD_FAST(arg=0, lineno=2528)
           8	CALL_METHOD(arg=1, lineno=2528)
          10	LOAD_CONST(arg=1, lineno=2528)
          12	LOAD_GLOBAL(arg=0, lineno=2528)
          14	LOAD_METHOD(arg=2, lineno=2528)
          16	LOAD_FAST(arg=0, lineno=2528)
          18	CALL_METHOD(arg=1, lineno=2528)
          20	BINARY_MULTIPLY(arg=None, lineno=2528)
          22	BINARY_ADD(arg=None, lineno=2528)
          24	RETURN_VALUE(arg=None, lineno=2528)
2025-03-21 20:14:18,940 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:18,940 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:18,940 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:18,940 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2524)
2025-03-21 20:14:18,940 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,940 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2528)
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=2528)
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2528)
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - stack ['$4load_method.1']
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=2528)
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$x6.2']
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=2528)
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - stack ['$8call_method.3']
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=2528)
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4']
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_METHOD(arg=2, lineno=2528)
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$12load_global.5']
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=2528)
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$14load_method.6']
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=CALL_METHOD(arg=1, lineno=2528)
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$14load_method.6', '$x16.7']
2025-03-21 20:14:18,941 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_MULTIPLY(arg=None, lineno=2528)
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$18call_method.8']
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_ADD(arg=None, lineno=2528)
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$20binary_multiply.9']
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=2528)
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - stack ['$22binary_add.10']
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:18,942 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$x6.2'}), (8, {'func': '$4load_method.1', 'args': ['$x6.2'], 'res': '$8call_method.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$12load_global.5'}), (14, {'item': '$12load_global.5', 'res': '$14load_method.6'}), (16, {'res': '$x16.7'}), (18, {'func': '$14load_method.6', 'args': ['$x16.7'], 'res': '$18call_method.8'}), (20, {'lhs': '$const10.4', 'rhs': '$18call_method.8', 'res': '$20binary_multiply.9'}), (22, {'lhs': '$8call_method.3', 'rhs': '$20binary_multiply.9', 'res': '$22binary_add.10'}), (24, {'retval': '$22binary_add.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:18,943 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $2load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2524)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $const10.4 = const(complex, 1j)          ['$const10.4']
    $12load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2524)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $20binary_multiply.9 = $const10.4 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    return $24return_value.11                ['$24return_value.11']

2025-03-21 20:14:18,948 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:18,948 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53fd4460>
2025-03-21 20:14:18,948 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:18,948 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=cos)
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2524)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(complex, 1j)
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: $14load_method.6 = getattr(value=$12load_global.5, attr=sin)
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2524)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: $20binary_multiply.9 = $const10.4 * $18call_method.8
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: $22binary_add.10 = $8call_method.3 + $20binary_multiply.9
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: $24return_value.11 = cast(value=$22binary_add.10)
2025-03-21 20:14:18,949 - numba.core.ssa - DEBUG - on stmt: return $24return_value.11
2025-03-21 20:14:18,950 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12load_global.5': [(<numba.core.ir.Assign object at 0x727f53fd66e0>,
                                   0)],
             '$14load_method.6': [(<numba.core.ir.Assign object at 0x727f53fd6470>,
                                   0)],
             '$18call_method.8': [(<numba.core.ir.Assign object at 0x727f53fd5ea0>,
                                   0)],
             '$20binary_multiply.9': [(<numba.core.ir.Assign object at 0x727f53fd5db0>,
                                       0)],
             '$22binary_add.10': [(<numba.core.ir.Assign object at 0x727f53fd5b10>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x727f53fd65c0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f53fd54b0>,
                                  0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x727f53fd6b00>,
                                  0)],
             '$8call_method.3': [(<numba.core.ir.Assign object at 0x727f53fd6a10>,
                                  0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f53fd6800>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f53fd7cd0>, 0)]})
2025-03-21 20:14:18,950 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f53fd4460>
2025-03-21 20:14:19,462 - VoiceApp - DEBUG - Loaded audio with librosa: length=8445697, sample_rate=22050
2025-03-21 20:14:19,468 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-03-21 20:14:19,468 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:19,468 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-03-21 20:14:19,469 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-03-21 20:14:19,470 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-03-21 20:14:19,471 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-03-21 20:14:19,472 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:19,473 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:19,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:19,476 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=445)
           2	LOAD_GLOBAL(arg=0, lineno=453)
           4	LOAD_FAST(arg=0, lineno=453)
           6	CALL_FUNCTION(arg=1, lineno=453)
           8	LOAD_FAST(arg=1, lineno=453)
          10	LOAD_CONST(arg=1, lineno=453)
          12	LOAD_CONST(arg=1, lineno=453)
          14	BUILD_SLICE(arg=2, lineno=453)
          16	STORE_SUBSCR(arg=None, lineno=453)
          18	LOAD_CONST(arg=1, lineno=453)
          20	RETURN_VALUE(arg=None, lineno=453)
2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=445)
2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=453)
2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=453)
2025-03-21 20:14:19,479 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=453)
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=453)
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=453)
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=453)
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=453)
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=453)
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=453)
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=453)
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:19,480 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:19,481 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:19,481 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:19,481 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:19,481 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:19,481 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:19,481 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:19,481 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:19,481 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_pi_stencil: <numba.stencils.stencil.StencilFunc object at 0x727f5443ddb0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, pitch.py:445)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, pitch.py:453), Var($const12.5, pitch.py:453)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53febd30>
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_pi_stencil: <numba.stencils.stencil.StencilFunc object at 0x727f5443ddb0>)
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, pitch.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, pitch.py:453), Var($const12.5, pitch.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:19,487 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:19,488 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:19,488 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f53e1cd60>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f53e1ce80>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f53e1d240>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f53e1c520>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f53e1c820>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f53e1ca60>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f53e1cbe0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f53e1d0c0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f53fe8b80>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f53e1c3a0>, 0)]})
2025-03-21 20:14:19,488 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f53febd30>
2025-03-21 20:14:19,520 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:19,520 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:19,520 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,520 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:19,520 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:19,521 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,522 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:19,523 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:19,524 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:19,525 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:19,526 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:19,527 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:19,527 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:19,527 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:19,527 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:19,528 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:19,528 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:19,528 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:19,528 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:19,528 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:19,528 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:19,528 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:19,530 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=float64) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:19,543 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:19,543 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53e7c550>
2025-03-21 20:14:19,543 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:19,543 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:19,543 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:19,543 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=float64)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:19,544 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:19,545 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53e7c550>
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 166
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53e7c550>
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 166
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53e7c550>
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:19,546 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53e7c550>
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $const16.7 = const(int, 2)
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $const20.9 = const(int, 0)
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const20.9 + index00
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $22binary_subscr.10 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $24binary_multiply.11 = $const16.7 * $22binary_subscr.10
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: a = $14binary_add.6 - $24binary_multiply.11
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $const32.14 = const(int, 1)
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const32.14 + index00
2025-03-21 20:14:19,547 - numba.core.ssa - DEBUG - on stmt: $34binary_subscr.15 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $const38.17 = const(int, -1)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: stencil_index.4 = $const38.17 + index00
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $40binary_subscr.18 = getitem(value=x, index=stencil_index.4, fn=<built-in function getitem>)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $const44.20 = const(int, 2)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: b = $42binary_subtract.19 / $const44.20
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $50load_global.22 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $52load_method.23 = getattr(value=$50load_global.22, attr=abs)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $58load_global.26 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $60load_method.27 = getattr(value=$58load_global.26, attr=abs)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $66compare_op.30 = $56call_method.25 >= $64call_method.29
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: bool68 = global(bool: <class 'bool'>)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,548 - numba.core.ssa - DEBUG - on stmt: branch $68pred, 91, 161
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53e7c550>
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: $const70.0 = const(int, 0)
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: $72return_value.1 = cast(value=$const70.0)
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $72return_value.1
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 161
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53e7c550>
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: $76unary_negative.1 = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: $80binary_true_divide.3 = $76unary_negative.1 / a
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: $82return_value.4 = cast(value=$80binary_true_divide.3)
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $82return_value.4
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 165
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53e7c550>
2025-03-21 20:14:19,549 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:19,551 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f53e6e5c0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f53e6ce80>,
                                     90)],
             '$14binary_add.6': [(<numba.core.ir.Assign object at 0x727f53f9ab30>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f53e6e1d0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f53e6e050>,
                                   0)],
             '$22binary_subscr.10': [(<numba.core.ir.Assign object at 0x727f53e6d0c0>,
                                      90)],
             '$24binary_multiply.11': [(<numba.core.ir.Assign object at 0x727f53f87dc0>,
                                        90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f53e6f2b0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f53e6f3d0>,
                                      0)],
             '$34binary_subscr.15': [(<numba.core.ir.Assign object at 0x727f53e6d300>,
                                      90)],
             '$40binary_subscr.18': [(<numba.core.ir.Assign object at 0x727f53e6d540>,
                                      90)],
             '$42binary_subtract.19': [(<numba.core.ir.Assign object at 0x727f53fbf1f0>,
                                        90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f53e6fbb0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f53e6fcd0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f53e6ff10>,
                                      0)],
             '$50load_global.22': [(<numba.core.ir.Assign object at 0x727f53e4b1f0>,
                                    90)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f53e700d0>,
                                      0)],
             '$52load_method.23': [(<numba.core.ir.Assign object at 0x727f53f88820>,
                                    90)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f53e705b0>,
                                        0)],
             '$56call_method.25': [(<numba.core.ir.Assign object at 0x727f53f89b40>,
                                    90)],
             '$58load_global.26': [(<numba.core.ir.Assign object at 0x727f53f89d20>,
                                    90)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f53e706d0>,
                                         0)],
             '$60load_method.27': [(<numba.core.ir.Assign object at 0x727f53e50580>,
                                    90)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f53e70b20>,
                                        0)],
             '$64call_method.29': [(<numba.core.ir.Assign object at 0x727f53e518a0>,
                                    90)],
             '$66compare_op.30': [(<numba.core.ir.Assign object at 0x727f53e51a80>,
                                   90)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f53e70c70>,
                                      0)],
             '$68pred': [(<numba.core.ir.Assign object at 0x727f53e55750>, 90)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f53e6cc40>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f53e71150>,
                                        0)],
             '$72return_value.1': [(<numba.core.ir.Assign object at 0x727f53e5d360>,
                                    91)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f53e712a0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f53e71450>,
                                        0)],
             '$76unary_negative.1': [(<numba.core.ir.Assign object at 0x727f53e63820>,
                                      161)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f53e71570>,
                                   0)],
             '$80binary_true_divide.3': [(<numba.core.ir.Assign object at 0x727f53e63790>,
                                          161)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f53e71660>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f53e71780>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f53e718a0>,
                                  80)],
             '$82return_value.4': [(<numba.core.ir.Assign object at 0x727f53e63b80>,
                                    161)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f53e6e740>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f53e721d0>,
                                      166)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f53f2dd80>,
                             90)],
             '$const16.7': [(<numba.core.ir.Assign object at 0x727f53f9a770>,
                             90)],
             '$const20.9': [(<numba.core.ir.Assign object at 0x727f53f4faf0>,
                             90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f53e6d900>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f53e6d5d0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f53e6f130>,
                                0)],
             '$const32.14': [(<numba.core.ir.Assign object at 0x727f53fa8ac0>,
                              90)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f53e6f610>,
                                0)],
             '$const38.17': [(<numba.core.ir.Assign object at 0x727f53fbffd0>,
                              90)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f53e1ded0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f53e6f8b0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f53e6fa30>,
                                0)],
             '$const44.20': [(<numba.core.ir.Assign object at 0x727f53fbef80>,
                              90)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f53e70250>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f53e703d0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f53e70970>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f53e70df0>,
                                0)],
             '$const70.0': [(<numba.core.ir.Assign object at 0x727f53e5e740>,
                             91)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f53e70f70>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f53e6ead0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f53e707f0>,
                             80)],
             'a': [(<numba.core.ir.Assign object at 0x727f53f87fa0>, 90)],
             'b': [(<numba.core.ir.Assign object at 0x727f53e49c00>, 90)],
             'bool68': [(<numba.core.ir.Assign object at 0x727f53e52ef0>, 90)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f53e6e9e0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f53e71b70>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f53e6da80>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f53e6cbe0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f53e6cdc0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f53e6d000>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f53e6d240>,
                                  90)],
             'stencil_index.4': [(<numba.core.ir.Assign object at 0x727f53e6d480>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f53e6ec80>, 0)]})
2025-03-21 20:14:19,552 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f53e77310>
2025-03-21 20:14:19,558 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
2025-03-21 20:14:19,558 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:19,558 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,558 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:19,558 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4388)
2025-03-21 20:14:19,558 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,558 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1']
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - stack ['$10call_function.4']
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:19,559 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:19,560 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:19,560 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:19,560 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:19,560 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:19,560 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:19,560 - numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

2025-03-21 20:14:19,565 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:19,565 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f53e77a90>
2025-03-21 20:14:19,565 - numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
2025-03-21 20:14:19,565 - numba.core.ssa - DEBUG - on stmt: dtype = arg(1, name=dtype)
2025-03-21 20:14:19,565 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
2025-03-21 20:14:19,565 - numba.core.ssa - DEBUG - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
2025-03-21 20:14:19,565 - numba.core.ssa - DEBUG - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,565 - numba.core.ssa - DEBUG - on stmt: $12return_value.5 = cast(value=$10call_function.4)
2025-03-21 20:14:19,565 - numba.core.ssa - DEBUG - on stmt: return $12return_value.5
2025-03-21 20:14:19,566 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x727f53e80d60>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x727f53e80e80>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f53e758a0>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x727f53e775e0>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x727f53e75ab0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x727f53e75840>, 0)]})
2025-03-21 20:14:19,566 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f53e77a90>
2025-03-21 20:14:19,950 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=445)
           2	LOAD_GLOBAL(arg=0, lineno=453)
           4	LOAD_FAST(arg=0, lineno=453)
           6	CALL_FUNCTION(arg=1, lineno=453)
           8	LOAD_FAST(arg=1, lineno=453)
          10	LOAD_CONST(arg=1, lineno=453)
          12	LOAD_CONST(arg=1, lineno=453)
          14	BUILD_SLICE(arg=2, lineno=453)
          16	STORE_SUBSCR(arg=None, lineno=453)
          18	LOAD_CONST(arg=1, lineno=453)
          20	RETURN_VALUE(arg=None, lineno=453)
2025-03-21 20:14:19,950 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:19,950 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,950 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:19,950 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=445)
2025-03-21 20:14:19,950 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack ['$6call_function.2']
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=453)
2025-03-21 20:14:19,951 - numba.core.byteflow - DEBUG - stack ['$const18.8']
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:19,952 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:19,953 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_pi_stencil: <numba.stencils.stencil.StencilFunc object at 0x727f5443ddb0>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, pitch.py:445)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, pitch.py:453), Var($const12.5, pitch.py:453)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f5b325ea0>
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_pi_stencil: <numba.stencils.stencil.StencilFunc object at 0x727f5443ddb0>)
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, pitch.py:445)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, pitch.py:453), Var($const12.5, pitch.py:453)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:19,958 - numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
2025-03-21 20:14:19,959 - numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
2025-03-21 20:14:19,959 - numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
2025-03-21 20:14:19,959 - numba.core.ssa - DEBUG - on stmt: return $20return_value.9
2025-03-21 20:14:19,959 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x727f5b324760>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x727f5b327f10>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x727f5b337400>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x727f5b324eb0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x727f5b3241c0>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5b3243a0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x727f5b3245b0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x727f5b3379d0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x727f5b324bb0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x727f5b324a30>, 0)]})
2025-03-21 20:14:19,959 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f5b325ea0>
2025-03-21 20:14:19,991 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:19,991 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-21 20:14:19,991 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - stack ['$8load_global.2']
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
2025-03-21 20:14:19,992 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack ['$const24.9']
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
2025-03-21 20:14:19,993 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack ['$const36.15']
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack ['$48load_global.21']
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:19,994 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
2025-03-21 20:14:19,995 - numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - stack ['$76call_function.35']
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - stack: []
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - stack []
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - stack ['$out090.0']
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-21 20:14:19,996 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
2025-03-21 20:14:19,997 - numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-21 20:14:19,998 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:19,998 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:19,998 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:19,998 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-21 20:14:19,999 - numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-21 20:14:19,999 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
2025-03-21 20:14:19,999 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-21 20:14:19,999 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
2025-03-21 20:14:19,999 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-21 20:14:19,999 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
2025-03-21 20:14:19,999 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-21 20:14:20,001 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=float64) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

2025-03-21 20:14:20,014 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-21 20:14:20,014 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545deda0>
2025-03-21 20:14:20,014 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-21 20:14:20,014 - numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
2025-03-21 20:14:20,014 - numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=float64)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
2025-03-21 20:14:20,015 - numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
2025-03-21 20:14:20,016 - numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545deda0>
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 166
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545deda0>
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: jump 90
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 166
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545deda0>
2025-03-21 20:14:20,017 - numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545deda0>
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $const16.7 = const(int, 2)
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $const20.9 = const(int, 0)
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const20.9 + index00
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $22binary_subscr.10 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $24binary_multiply.11 = $const16.7 * $22binary_subscr.10
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: a = $14binary_add.6 - $24binary_multiply.11
2025-03-21 20:14:20,018 - numba.core.ssa - DEBUG - on stmt: $const32.14 = const(int, 1)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const32.14 + index00
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $34binary_subscr.15 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $const38.17 = const(int, -1)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: stencil_index.4 = $const38.17 + index00
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $40binary_subscr.18 = getitem(value=x, index=stencil_index.4, fn=<built-in function getitem>)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $const44.20 = const(int, 2)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: b = $42binary_subtract.19 / $const44.20
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $50load_global.22 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $52load_method.23 = getattr(value=$50load_global.22, attr=abs)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $58load_global.26 = global(np: <module 'numpy' from '/home/darce/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $60load_method.27 = getattr(value=$58load_global.26, attr=abs)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:20,019 - numba.core.ssa - DEBUG - on stmt: $66compare_op.30 = $56call_method.25 >= $64call_method.29
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: bool68 = global(bool: <class 'bool'>)
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None)
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: branch $68pred, 91, 161
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545deda0>
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: $const70.0 = const(int, 0)
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: $72return_value.1 = cast(value=$const70.0)
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $72return_value.1
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 161
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545deda0>
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: $76unary_negative.1 = unary(fn=<built-in function neg>, value=b)
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: $80binary_true_divide.3 = $76unary_negative.1 / a
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: $82return_value.4 = cast(value=$80binary_true_divide.3)
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: out0[index00] = $82return_value.4
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: jump 165
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 165
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x727f545deda0>
2025-03-21 20:14:20,020 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-21 20:14:20,023 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x727f546c8ca0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x727f546445b0>,
                                     90)],
             '$14binary_add.6': [(<numba.core.ir.Assign object at 0x727f53e5d0f0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x727f546cbfa0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x727f546caa10>,
                                   0)],
             '$22binary_subscr.10': [(<numba.core.ir.Assign object at 0x727f54645990>,
                                      90)],
             '$24binary_multiply.11': [(<numba.core.ir.Assign object at 0x727f53e814b0>,
                                        90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x727f54238b80>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x727f5423b2e0>,
                                      0)],
             '$34binary_subscr.15': [(<numba.core.ir.Assign object at 0x727f546ca6e0>,
                                      90)],
             '$40binary_subscr.18': [(<numba.core.ir.Assign object at 0x727f546c86a0>,
                                      90)],
             '$42binary_subtract.19': [(<numba.core.ir.Assign object at 0x727f53f227a0>,
                                        90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x727f5454ba30>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x727f5454bfa0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x727f5454bcd0>,
                                      0)],
             '$50load_global.22': [(<numba.core.ir.Assign object at 0x727f544e7eb0>,
                                    90)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x727f5454ab90>,
                                      0)],
             '$52load_method.23': [(<numba.core.ir.Assign object at 0x727f544e6200>,
                                    90)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x727f54549360>,
                                        0)],
             '$56call_method.25': [(<numba.core.ir.Assign object at 0x727f544d1900>,
                                    90)],
             '$58load_global.26': [(<numba.core.ir.Assign object at 0x727f544d1a50>,
                                    90)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x727f54549060>,
                                         0)],
             '$60load_method.27': [(<numba.core.ir.Assign object at 0x727f544dc9a0>,
                                    90)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x727f54548c10>,
                                        0)],
             '$64call_method.29': [(<numba.core.ir.Assign object at 0x727f54419c30>,
                                    90)],
             '$66compare_op.30': [(<numba.core.ir.Assign object at 0x727f5b327d90>,
                                   90)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x727f54548df0>,
                                      0)],
             '$68pred': [(<numba.core.ir.Assign object at 0x727f5b3170d0>, 90)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x727f546460b0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x727f545482b0>,
                                        0)],
             '$72return_value.1': [(<numba.core.ir.Assign object at 0x727f5441b3a0>,
                                    91)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x727f545486d0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x727f54548250>,
                                        0)],
             '$76unary_negative.1': [(<numba.core.ir.Assign object at 0x727f54617c40>,
                                      161)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x727f545480d0>,
                                   0)],
             '$80binary_true_divide.3': [(<numba.core.ir.Assign object at 0x727f54617be0>,
                                          161)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x727f545481c0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x727f545497b0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x727f545498d0>,
                                  80)],
             '$82return_value.4': [(<numba.core.ir.Assign object at 0x727f54615600>,
                                    161)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x727f546c82e0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x727f5454a200>,
                                      166)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x727f5b349120>,
                             90)],
             '$const16.7': [(<numba.core.ir.Assign object at 0x727f53e5cf10>,
                             90)],
             '$const20.9': [(<numba.core.ir.Assign object at 0x727f53e8ea40>,
                             90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x727f546c9f90>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x727f54238ac0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x727f5423a740>,
                                0)],
             '$const32.14': [(<numba.core.ir.Assign object at 0x727f53e83d60>,
                              90)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x727f54239e10>,
                                0)],
             '$const38.17': [(<numba.core.ir.Assign object at 0x727f53f282e0>,
                              90)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x727f5b334250>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x727f5423be50>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x727f5454a920>,
                                0)],
             '$const44.20': [(<numba.core.ir.Assign object at 0x727f53f22410>,
                              90)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x727f5454ace0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x727f54549480>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x727f54548d30>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x727f54548f40>,
                                0)],
             '$const70.0': [(<numba.core.ir.Assign object at 0x727f544187f0>,
                             91)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x727f54548a90>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x727f54238f40>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x727f545491e0>,
                             80)],
             'a': [(<numba.core.ir.Assign object at 0x727f53e82080>, 90)],
             'b': [(<numba.core.ir.Assign object at 0x727f544e5300>, 90)],
             'bool68': [(<numba.core.ir.Assign object at 0x727f5b3279d0>, 90)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x727f546c9ae0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x727f54549c00>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x727f546c8f10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x727f54644910>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x727f54644370>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x727f546459c0>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x727f546475b0>,
                                  90)],
             'stencil_index.4': [(<numba.core.ir.Assign object at 0x727f546caaa0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x727f546c94e0>, 0)]})
2025-03-21 20:14:20,023 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x727f54552650>
2025-03-21 20:14:20,846 - VoiceApp - DEBUG - Created embedding with shape torch.Size([1, 32])
2025-03-21 20:14:20,846 - VoiceApp - DEBUG - Analysis thread finished
2025-03-21 20:14:20,846 - VoiceApp - INFO - Analysis completed successfully
2025-03-21 20:14:20,846 - VoiceApp - DEBUG - Embedding shape: torch.Size([1, 32])
2025-03-21 20:14:20,847 - VoiceApp - DEBUG - Embedding type: <class 'torch.Tensor'>
2025-03-21 20:14:20,847 - VoiceApp - DEBUG - Generate button enabled
2025-03-21 20:14:20,847 - VoiceApp - DEBUG - Plotting waveform: length=8445697, sr=22050
2025-03-21 20:14:21,265 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-03-21 20:14:21,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,265 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,266 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,267 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/LakkiReddy.ttf', name='LakkiReddy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,268 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NATS.ttf', name='NATS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/suranna.ttf', name='Suranna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BlackItalic.ttf', name='Lato', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Thin.otf', name='Gayathri', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,269 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-MediumItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HairlineItalic.ttf', name='Lato', style='italic', variant='normal', weight=100, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,270 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi-Regular.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ponnala.ttf', name='Ponnala', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,271 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Hairline.ttf', name='Lato', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TenaliRamakrishna-Regular.ttf', name='TenaliRamakrishna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,272 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,273 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam-Regular.ttf', name='Keraleeyam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Heavy.ttf', name='Lato', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Chilanka-Regular.otf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 20:14:21,274 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob-Regular.ttf', name='Uroob', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SreeKrushnadevaraya.ttf', name='Sree Krushnadevaraya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-BoldItalic.ttf', name='Lato', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-HeavyItalic.ttf', name='Lato', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Suravaram.ttf', name='Suravaram', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gidugu.ttf', name='Gidugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,275 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/TimmanaRegular.ttf', name='Timmana', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Light.ttf', name='Lato', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-SemiBold.ttf', name='Rasa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Mandali-Regular.ttf', name='Mandali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Light.ttf', name='Rasa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,276 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MitraMono.ttf', name='Mitra ', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,277 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Bold.ttf', name='Rasa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Regular.ttf', name='Lato', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,278 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/font-awesome/FontAwesome.otf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-Regular.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,279 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Ramaraja-Regular.ttf', name='Ramaraja', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Bold.otf', name='Gayathri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,280 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/mallanna.ttf', name='Mallanna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Thin.ttf', name='Lato', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:14:21,281 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-SemiboldItalic.ttf', name='Lato', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/SyamalaRamana.ttf', name='Syamala Ramana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Italic.ttf', name='Lato', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Semibold.ttf', name='Lato', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-21 20:14:21,282 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/VT323-Regular.ttf', name='VT323', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Bold.ttf', name='Lato', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,283 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi-Regular.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-MediumItalic.ttf', name='Lato', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-ThinItalic.ttf', name='Lato', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,284 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Regular.ttf', name='Yrsa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Black.ttf', name='Lato', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Muktibold.ttf', name='Mukti', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-Medium.ttf', name='Lato', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/BubblerOne-Regular.ttf', name='Bubbler One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/NTR.ttf', name='NTR', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Italic.ttf', name='Yrsa', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/PottiSreeramulu.ttf', name='Potti Sreeramulu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,285 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Gayathri-Regular.otf', name='Gayathri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Medium.ttf', name='Rasa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,286 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/Bangers-Regular.ttf', name='Bangers', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Gurajada.ttf', name='Gurajada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/dhurjati.ttf', name='Dhurjati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lato/Lato-LightItalic.ttf', name='Lato', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-21 20:14:21,287 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/libreoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Bold.ttf', name='Yrsa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/font-awesome/fontawesome-webfont.ttf', name='FontAwesome', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Medium.ttf', name='Yrsa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,288 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-21 20:14:21,289 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-SemiBold.ttf', name='Yrsa', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/AmaticSC-Regular.ttf', name='Amatic SC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/RaviPrakash.ttf', name='RaviPrakash', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,290 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/ramabhadra.ttf', name='Ramabhadra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-BoldItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-Light.ttf', name='Yrsa', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/teluguvijayam/Peddana-Regular.ttf', name='Peddana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi-Regular.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,291 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalamSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Rasa-Regular.ttf', name='Rasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,292 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/Mukti.ttf', name='Mukti', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-21 20:14:21,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-21 20:14:21,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-yrsa-rasa/Yrsa-LightItalic.ttf', name='Yrsa', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-03-21 20:14:21,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-21 20:14:21,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-21 20:14:21,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera-Regular.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,293 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-21 20:14:21,293 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/darce/.local/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-21 20:14:21,675 - VoiceApp - DEBUG - Plotting spectrogram: length=8445697, sr=22050
2025-03-21 20:14:22,774 - VoiceApp - DEBUG - Plotting MFCC: shape=(20, 16496)
2025-03-21 20:14:22,897 - VoiceApp - INFO - UI updated after analysis
2025-03-21 20:14:29,829 - VoiceApp - DEBUG - Using preset text: The quick brown fox jumps over the lazy dog.
2025-03-21 20:14:32,645 - VoiceApp - INFO - Starting speech generation with text: The quick brown fox jumps over...
2025-03-21 20:14:32,646 - VoiceApp - DEBUG - Parameters: pitch=0, speed=1.0, emotion=neutral
2025-03-21 20:14:32,646 - VoiceApp - DEBUG - Batch mode: Single Text, number of texts: 1
2025-03-21 20:14:32,648 - VoiceApp - DEBUG - Processing batch item 1/1: The quick brown fox jumps over...
2025-03-21 20:14:32,649 - VoiceApp - DEBUG - SynthesisThread initialized for text: The quick brown fox jumps over...
2025-03-21 20:14:32,649 - VoiceApp - INFO - Starting synthesis thread
2025-03-21 20:14:34,695 - VoiceApp - INFO - Synthesizing speech with placeholder model: 'The quick brown fox jumps over...'
2025-03-21 20:14:34,733 - VoiceApp - DEBUG - Generated audio: length=97020, min=-0.94, max=0.94
2025-03-21 20:14:34,733 - VoiceApp - DEBUG - Synthesis thread finished
2025-03-21 20:14:34,733 - VoiceApp - INFO - Synthesis complete: audio length=97020, sample rate=22050
2025-03-21 20:14:34,734 - VoiceApp - DEBUG - Audio min/max values: -0.9432/0.9432
2025-03-21 20:14:34,734 - VoiceApp - DEBUG - Created history item: 20:14:34 - The quick brown fox jumps over...
2025-03-21 20:14:34,734 - VoiceApp - DEBUG - Plotting waveform: length=97020, sr=22050
2025-03-21 20:14:34,838 - VoiceApp - DEBUG - Plotting spectrogram: length=97020, sr=22050
2025-03-21 20:14:34,946 - VoiceApp - DEBUG - Play button enabled
2025-03-21 20:14:34,947 - VoiceApp - INFO - Speech generation complete for all items
2025-03-21 20:14:36,477 - VoiceApp - DEBUG - Saving temporary audio file to /tmp/tmppg68mh2z.wav
2025-03-21 20:14:36,487 - VoiceApp - DEBUG - Audio saved to temporary file: /tmp/tmppg68mh2z.wav
2025-03-21 20:14:36,487 - VoiceApp - DEBUG - Attempting to play audio file: /tmp/tmppg68mh2z.wav
2025-03-21 20:14:36,490 - VoiceApp - DEBUG - Found player: aplay
2025-03-21 20:14:36,492 - VoiceApp - INFO - Started audio playback with aplay
2025-03-21 20:14:36,492 - VoiceApp - INFO - Audio playback started
2025-03-21 20:14:47,543 - VoiceApp - INFO - Application closing - cleaning up
2025-03-21 20:14:47,544 - VoiceApp - DEBUG - Deleted temporary file: /tmp/tmppg68mh2z.wav
